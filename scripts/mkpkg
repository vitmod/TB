#!/bin/bash

################################################################################
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
################################################################################

usage() {
  echo "  usage: '$0 -l' to list packages"
  echo "         '$0 -a' to update all packagegs"
  echo "         '$0 PKG_NAME' to creaet package tar"
}

if [ -z "$1" ] ; then
  usage
  exit 0
fi

if [ "$1" == "-l" ] ; then
  for i in `find packages/ -type f -name package.mk | sort`; do
    PKG_FETCH=""
    . $i
    if [ -n "$PKG_FETCH" ] ; then
      printf "* %-32s %-6s %s\n" $PKG_NAME $PKG_FETCH
    fi
  done
  exit 0
fi

if [ "$1" == "-a" ] ; then
  for i in `find packages/ -type f -name package.mk | sort`; do
    PKG_FETCH=""
    . $i
    if [ -n "$PKG_FETCH" ] ; then
      $0 $PKG_NAME
    fi
  done
  exit 0
fi

. config/options

if [ -n "$2" ] ; then
  FORCED_REV="$2"
fi

if [ -n "$PKG_FETCH" ] ; then
  mkdir -p .work/sources
  cd .work/sources
  echo "[mkpkg] Checking out $PKG_FETCH ..."
  if [ ! -d $PKG_NAME.git ]; then
    git clone $PKG_FETCH -b master $PKG_NAME.git &>/dev/null
  fi

  cd $PKG_NAME.git
  git checkout master
  git pull
  if [ -n "$FORCED_REV" ] ; then
    REV=`git log $2 -n1 --format=%h`
    git branch -D "ref-$REV" &>/dev/null || :
    git checkout "$FORCED_REV" -b "ref-$REV" || exit 1
  fi
  REV=`git log -n1 --format=%h`
  cd ..

  TAR="$ROOT/sources/$PKG_NAME/$PKG_NAME-$REV.tar.gz"
  if [ ! -e $TAR ] ; then
    mkdir -p $ROOT/sources/$PKG_NAME
    echo "[mkpkg] Copying sources: $PKG_NAME-$REV ..."
    rm -rf $PKG_NAME-$REV
    cp -R $PKG_NAME.git $PKG_NAME-$REV

    echo "[mkpkg] Cleaning $PKG_NAME-$REV ..."
    rm -rf $PKG_NAME-$REV/.git

    echo "[mkpkg] => Packaging $TAR ..."
    tar czf $TAR $PKG_NAME-$REV
    echo $PKG_URL > $TAR.url
  else
    echo "[mkpkg] $TAR already exists ..."
  fi

  if [ ! "$PKG_VERSION" = "$REV" ] ; then
    echo "[mkpkg] Updating $PKG_DIR/package.mk"
    sed -i "s|PKG_VERSION=.*|PKG_VERSION=\"$REV\"|g" $PKG_DIR/package.mk
    git add $PKG_DIR/package.mk
    git commit -m "[update] $PKG_NAME-$REV"
  fi

  echo "[mkpkg] Cleaning up $PKG_NAME-$REV sources ..."
  rm -rf $PKG_NAME-$REV
else
  exit 1
fi
