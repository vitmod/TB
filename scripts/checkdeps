#!/bin/bash

################################################################################
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
################################################################################

. config/options $1

if  [ -f /etc/os-release ]; then
  DISTRO=$(grep ^ID= /etc/os-release | cut -d "=" -f 2 | tr A-Z a-z)
fi

deps="    bash bc bison bzip2 chrpath cmake cpio diff      gperf mkimage"
deps_pkg="bash bc bison bzip2 chrpath cmake cpio diffutils gperf uboot-tools"

deps="    $deps     flex gawk gcc g++ gzip java"
deps_pkg="$deps_pkg flex gawk gcc g++ gzip default-jre"

deps="    $deps     patch perl sed swig tar unzip xmlstarlet wget zip"
deps_pkg="$deps_pkg patch perl sed swig tar unzip xmlstarlet wget zip"

deps="    $deps     autopoint autoreconf automake libtoolize libtool     intltoolize"
deps_pkg="$deps_pkg autopoint autoconf   automake libtool    libtool-bin intltool"

deps="    $deps     pkg-config m4 gettextize mksquashfs"
deps_pkg="$deps_pkg pkg-config m4 gettext    squashfs-tools"

files="    /usr/include/stdio.h /usr/include/ncurses.h"
files_pkg="libc6-dev            libncurses5-dev"

getarg() {
  eval echo \${$(($1+2))}
}

i=0
while dep=`getarg $i $deps` && [ -n "$dep" ]; do
  [ -z "`which $dep 2>/dev/null`" ] && need="$need $dep" && need_pkg="$need_pkg `getarg $i $deps_pkg`"
  i=$(($i+1))
done

i=0
while file=`getarg $i $files` && [ -n "$file" ]; do
  [ ! -f $file ] && need="$need $file" && need_pkg="$need_pkg `getarg $i $files_pkg`"
  i=$(($i+1))
done

if [ -n "$need" ]; then
  echo "**** Your system lacks the following tools needed to build $DISTRONAME ****"
  echo $need
  echo "**** You seem to use a $DISTRO system ****"

  case "$DISTRO" in
    ubuntu|debian)
      read -p "would you like to install the needed tools ? (y/n) " ans
      [ "$ans" = "y" ] && sudo apt-get install $need_pkg
      ;;
    *)
      echo "**** unsupported distro $DISTRO ****"
      exit 1
      ;;
  esac
fi


need=""
need_pkg=""

i=0
while dep=`getarg $i $deps` && [ -n "$dep" ]; do
  [ -z "`which $dep 2>/dev/null`" ] && need="$need $dep" && need_pkg="$need_pkg `getarg $i $deps_pkg`"
  i=$(($i+1))
done

i=0
while file=`getarg $i $files` && [ -n "$file" ]; do
  [ ! -f $file ] && need="$need $file" && need_pkg="$need_pkg `getarg $i $files_pkg`"
  i=$(($i+1))
done

if [ -n "$need" ]; then
  echo "**** The following packages were not installed correctly ****"
  echo $need_pkg
  echo "********"
  exit 1
fi
