#!/bin/bash

################################################################################
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
################################################################################

. config/options $1

check_root
show_config

scripts/checkdeps
scripts/build toolchain

BUILD_DATE=`date +%Y%m%d%H%M%S`
GIT_ABBREV=$(git log -1 --pretty=format:%h)
DISTRO_VERSION=$OS_VERSION-$BUILD_DATE-g$GIT_ABBREV
IMAGE_NAME="$DISTRONAME-$PROJECT-$DISTRO_VERSION"

# clean old install dirs
rm -rf $INSTALL $STAMPS_INSTALL
mkdir -p $INSTALL

# create baselayout
mkdir -p $INSTALL/bin
mkdir -p $INSTALL/etc
mkdir -p $INSTALL/lib
mkdir -p $INSTALL/sbin
mkdir -p $INSTALL/dev
mkdir -p $INSTALL/proc
mkdir -p $INSTALL/run
mkdir -p $INSTALL/sys
mkdir -p $INSTALL/tmp
mkdir -p $INSTALL/usr
mkdir -p $INSTALL/var
mkdir -p $INSTALL/flash
mkdir -p $INSTALL/storage
ln -sf /var/media $INSTALL/media

# Basissystem...
scripts/install base
scripts/install mediacenter

# create /etc/os-release
echo -e "NAME=\"$DISTRONAME\"" > $INSTALL/etc/os-release
echo -e "VERSION=\"$DISTRO_VERSION\"" >> $INSTALL/etc/os-release
echo -e "ID=\"openelec\"" >> $INSTALL/etc/os-release
echo -e "VERSION_ID=\"$OS_VERSION\"" >> $INSTALL/etc/os-release
echo -e "PRETTY_NAME=\"$DISTRONAME - $DISTRO_VERSION\"" >> $INSTALL/etc/os-release

# create /etc/issue
echo "$DISTRONAME - $DISTRO_VERSION" >> $INSTALL/etc/issue
ln -sf /etc/issue $INSTALL/etc/motd

# copy project related files to filesystem
if [ -d "$PROJECT_DIR/$PROJECT/filesystem" ]; then
  cp -PR $PROJECT_DIR/$PROJECT/filesystem/* $INSTALL
  # install project specific systemd services
  for service in $PROJECT_DIR/$PROJECT/filesystem/usr/lib/systemd/system/*.service ; do
    if [ -f "$service" ] ; then
      enable_service $(basename $service)
    fi
  done
fi

# run depmod
MODVER=$(basename $(ls -d $INSTALL/lib/modules/*))
find $INSTALL/lib/modules/$MODVER/ -name *.ko | \
  sed -e "s,$INSTALL/lib/modules/$MODVER/,," > $INSTALL/lib/modules/$MODVER/modules.order
$ROOT/$TOOLCHAIN/bin/depmod -b $INSTALL $MODVER > /dev/null

# make target dir
mkdir -p $TARGET_IMG

cp -PR $BUILD/linux-*/arch/$TARGET_KERNEL_ARCH/boot/$KERNEL_TARGET $TARGET_IMG/$IMAGE_NAME.kernel
chmod 0644 $TARGET_IMG/$IMAGE_NAME.kernel

# run fakeroot
echo "chown -R 0:0 $INSTALL" > $FAKEROOT_SCRIPT
echo "rm -rf $TARGET_IMG/$IMAGE_NAME.system" >> $FAKEROOT_SCRIPT
echo "$ROOT/$TOOLCHAIN/bin/mksquashfs $BUILD/image/system $TARGET_IMG/$IMAGE_NAME.system -noappend -comp gzip" >> $FAKEROOT_SCRIPT
chmod +x $FAKEROOT_SCRIPT
fakeroot -- $FAKEROOT_SCRIPT
rm -rf $FAKEROOT_SCRIPT

# release
RELEASE_DIR="target/$IMAGE_NAME"
rm -rf $RELEASE_DIR
mkdir -p $RELEASE_DIR

cp $TARGET_IMG/$IMAGE_NAME.system $RELEASE_DIR/root.sqfs
cp $TARGET_IMG/$IMAGE_NAME.kernel $RELEASE_DIR/kernel.img
tar cf $TARGET_IMG/$IMAGE_NAME.tar -C $RELEASE_DIR .

if [ "$1" = "mkimage" ]; then
  echo "mkimage: boo. now root access (sudo) is required..."
  echo "mkimage: see scripts/image and scripts/mkimage if you dont trust us :)"
  # variables used in image script must be passed
  sudo env \
    PATH="$PATH:/sbin" \
    ROOT="$ROOT" \
    TOOLCHAIN="$TOOLCHAIN" \
    TARGET_IMG="$TARGET_IMG" \
    IMAGE_NAME="$IMAGE_NAME" \
    RELEASE_DIR="$RELEASE_DIR" \
    UUID_SYSTEM="$(uuidgen)" \
    UUID_STORAGE="$(uuidgen)" \
    scripts/mkimage
fi

# clean up
rm -rf $RELEASE_DIR
rm -f $TARGET_IMG/$IMAGE_NAME.system
rm -f $TARGET_IMG/$IMAGE_NAME.kernel
