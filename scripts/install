#!/bin/bash

################################################################################
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
################################################################################

. config/options $1

if [ -z "$1" ]; then
  echo "usage: $0 package_name"
  exit 1
fi

if [ -z "$INSTALL" ] ; then
  echo "error: '\$INSTALL' not set! this script is not intended to be run manually"
  exit 1
fi

check_package $1

if [ "$TARGET" = bootstrap -o "$TARGET" = host ] ; then
  exit 0
fi

STAMP=$STAMPS_INSTALL/$PACKAGE_NAME/install_$TARGET
mkdir -p $STAMPS_INSTALL/$PACKAGE_NAME

[ -f $STAMP ] && exit 0

scripts/build $@

printf "%${BUILD_INDENT}c ${boldgreen}INSTALL${endcolor}    $PACKAGE_NAME ${boldwhite}($TARGET)${endcolor}\n" ' '
export BUILD_INDENT=$((${BUILD_INDENT:-1}+4))

# install depends
for p in `eval echo "\\$PKG_DEPENDS_$UPTARGET"`; do
  scripts/install $p
done

if [ "$TARGET" = init ] ; then
  INSTALL=$BUILD/image/initramfs
fi
mkdir -p $INSTALL

if [ "$TARGET" = target ] ; then
  if [ -d $PKG_DIR/profile.d ]; then
    mkdir -p $INSTALL/etc/profile.d
    cp $PKG_DIR/profile.d/*.conf $INSTALL/etc/profile.d/
  fi

  if [ -d $PKG_DIR/tmpfiles.d ]; then
    mkdir -p $INSTALL/usr/lib/tmpfiles.d
    cp $PKG_DIR/tmpfiles.d/*.conf $INSTALL/usr/lib/tmpfiles.d
  fi

  if [ -d $PKG_DIR/system.d ]; then
    mkdir -p $INSTALL/usr/lib/systemd/system
    cp $PKG_DIR/system.d/*.* $INSTALL/usr/lib/systemd/system
  fi

  if [ -d $PKG_DIR/udev.d ]; then
    mkdir -p $INSTALL/usr/lib/udev/rules.d
    cp $PKG_DIR/udev.d/*.rules $INSTALL/usr/lib/udev/rules.d
  fi

  if [ -d $PKG_DIR/sysctl.d ]; then
    mkdir -p $INSTALL/usr/lib/sysctl.d/
    cp $PKG_DIR/sysctl.d/*.conf $INSTALL/usr/lib/sysctl.d/
  fi

  if [ -d $PKG_DIR/modules-load.d ]; then
    mkdir -p $INSTALL/usr/lib/modules-load.d/
    cp $PKG_DIR/modules-load.d/*.conf $INSTALL/usr/lib/modules-load.d/
  fi

  if [ -d $PKG_DIR/modprobe.d ]; then
    mkdir -p $INSTALL/lib/modprobe.d
    cp $PKG_DIR/modprobe.d/*.conf $INSTALL/lib/modprobe.d
  fi

  if [ -d $PKG_DIR/userconfig ]; then
    mkdir -p $INSTALL/usr/config
    cp -R $PKG_DIR/userconfig/* $INSTALL/usr/config
  fi
fi

# unset functions
unset -f pre_install
unset -f post_install

# include buildfile
. $PKG_DIR/package.mk

case "$TARGET" in
  target)
    if [ "$(type -t pre_install)" = "function" ]; then
      pre_install
    fi
    if [ -d $PKG_BUILD/.install_pkg ] ; then
      cp -PR $PKG_BUILD/.install_pkg/* $INSTALL
    fi
    if [ "$(type -t post_install)" = "function" ]; then
      post_install
    fi
    ;;
  init)
    if [ -d $PKG_BUILD/.install_init ] ; then
      cp -PR $PKG_BUILD/.install_init/* $INSTALL
    fi
    ;;
esac

touch $STAMP
