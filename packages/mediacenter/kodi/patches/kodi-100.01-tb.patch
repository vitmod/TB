From 0ab12839308c7884a15e36854800cbd03dd61895 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Mon, 2 Mar 2015 23:50:40 +0200
Subject: [PATCH 01/12] [tb] make binary addons executable

---
 xbmc/addons/Addon.cpp | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/xbmc/addons/Addon.cpp b/xbmc/addons/Addon.cpp
index 5005f8d..792df18 100644
--- a/xbmc/addons/Addon.cpp
+++ b/xbmc/addons/Addon.cpp
@@ -399,6 +399,12 @@ void OnPostInstall(const AddonPtr& addon, bool update, bool modal)
   if (CAddonMgr::GetInstance().GetAddon(addon->ID(), localAddon, ADDON_REPOSITORY))
     CRepositoryUpdater::GetInstance().ScheduleUpdate(); //notify updater there is a new addon or version
 
+  // OE: make binary addons executable
+  std::string cmd = StringUtils::Format("chmod a+x /storage/.kodi/addons/%s/bin/* 2>/dev/null",
+    addon->ID().c_str()); /* */
+  system(cmd.c_str());
+  // OE
+
   addon->OnPostInstall(update, modal);
 }
 
-- 
2.7.4


From 06302a44993c5370c6b943bbaeae7fb2e5961d5e Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sat, 18 Apr 2015 14:59:29 +0300
Subject: [PATCH 02/12] [tb] disable minimize

---
 xbmc/Application.cpp | 1 -
 1 file changed, 1 deletion(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index b44e467..66e78fb 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -4915,7 +4915,6 @@ bool CApplication::SwitchToFullScreen(bool force /* = false */)
 
 void CApplication::Minimize()
 {
-  g_Windowing.Minimize();
 }
 
 std::string CApplication::GetCurrentPlayer()
-- 
2.7.4


From 33b66c7bc09df19c3f0c98974624fa6050b40c57 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Mon, 18 Aug 2014 17:46:54 +0300
Subject: [PATCH 03/12] [tb] setup timezone

---
 xbmc/linux/LinuxTimezone.cpp | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/xbmc/linux/LinuxTimezone.cpp b/xbmc/linux/LinuxTimezone.cpp
index ea44d40..744780e 100644
--- a/xbmc/linux/LinuxTimezone.cpp
+++ b/xbmc/linux/LinuxTimezone.cpp
@@ -159,6 +159,12 @@ void CLinuxTimezone::OnSettingChanged(const CSetting *setting)
   const std::string &settingId = setting->GetId();
   if (settingId == CSettings::SETTING_LOCALE_TIMEZONE)
   {
+    // OE: setup timezone
+    std::string cmd = StringUtils::Format("ln -sf /usr/share/zoneinfo/%s /storage/.cache/localtime",
+      ((CSettingString*)setting)->GetValue().c_str());
+    system(cmd.c_str());
+    // OE
+
     SetTimezone(((CSettingString*)setting)->GetValue());
 
     CDateTime::ResetTimezoneBias();
-- 
2.7.4


From 88ee052e5cea5b8b1673615838ef436b113c9579 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Fri, 24 Apr 2015 19:45:20 +0300
Subject: [PATCH 04/12] [tb] use a wrapper to setup systemd services

---
 xbmc/addons/Addon.cpp | 30 ++++++++++++++++++++++++++++++
 xbmc/addons/Addon.h   |  1 +
 2 files changed, 31 insertions(+)

diff --git a/xbmc/addons/Addon.cpp b/xbmc/addons/Addon.cpp
index 792df18..f5bd02a 100644
--- a/xbmc/addons/Addon.cpp
+++ b/xbmc/addons/Addon.cpp
@@ -339,6 +339,13 @@ AddonVersion CAddon::GetDependencyVersion(const std::string &dependencyID) const
   return AddonVersion("0.0.0");
 }
 
+void CallOEWrapper(const std::string& ID, bool disable)
+{
+  std::string cmd = StringUtils::Format("/usr/lib/openelec/systemd-addon-wrapper %s %d",
+    ID.c_str(), disable);
+  system(cmd.c_str());
+}
+
 void OnEnabled(const std::string& id)
 {
   // If the addon is a special, call enabled handler
@@ -347,6 +354,11 @@ void OnEnabled(const std::string& id)
       CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_ADSPDLL))
     return addon->OnEnabled();
 
+  // OE: systemctl enable & start on addon enable
+  if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_SERVICE))
+    CallOEWrapper(addon->ID(), false);
+  // OE
+
   if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_SERVICE))
     std::static_pointer_cast<CService>(addon)->Start();
 
@@ -367,6 +379,11 @@ void OnDisabled(const std::string& id)
   if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_SERVICE, false))
     std::static_pointer_cast<CService>(addon)->Stop();
 
+  // OE: systemctl stop & disable on addon disable
+  if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_SERVICE, false))
+    CallOEWrapper(addon->ID(), true);
+  // OE
+
   if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_CONTEXT_ITEM, false))
     CContextMenuManager::GetInstance().Unregister(std::static_pointer_cast<CContextMenuAddon>(addon));
 }
@@ -390,6 +407,14 @@ void OnPreInstall(const AddonPtr& addon)
 void OnPostInstall(const AddonPtr& addon, bool update, bool modal)
 {
   AddonPtr localAddon;
+  // OE: systemctl stop & disable / enable & start on addon upgrade
+  if (CAddonMgr::GetInstance().GetAddon(addon->ID(), localAddon, ADDON_SERVICE))
+  {
+    CallOEWrapper(addon->ID(), true);
+    CallOEWrapper(addon->ID(), false);
+  }
+  // OE
+
   if (CAddonMgr::GetInstance().GetAddon(addon->ID(), localAddon, ADDON_SERVICE))
     std::static_pointer_cast<CService>(localAddon)->Start();
 
@@ -411,6 +436,11 @@ void OnPostInstall(const AddonPtr& addon, bool update, bool modal)
 void OnPreUnInstall(const AddonPtr& addon)
 {
   AddonPtr localAddon;
+  // OE: systemctl stop & disable on addon ininstall
+  if (CAddonMgr::GetInstance().GetAddon(addon->ID(), localAddon, ADDON_SERVICE))
+    CallOEWrapper(addon->ID(), true);
+  // OE
+
   if (CAddonMgr::GetInstance().GetAddon(addon->ID(), localAddon, ADDON_SERVICE))
     std::static_pointer_cast<CService>(localAddon)->Stop();
 
diff --git a/xbmc/addons/Addon.h b/xbmc/addons/Addon.h
index d43b309..2c51fb3 100644
--- a/xbmc/addons/Addon.h
+++ b/xbmc/addons/Addon.h
@@ -148,6 +148,7 @@ public:
   std::string GetSetting(const std::string& key) override;
 
   TiXmlElement* GetSettingsXML() override;
+  void CallOEWrapper(const std::string& ID, bool disable);
 
   /*! \brief get the required version of a dependency.
    \param dependencyID the addon ID of the dependency.
-- 
2.7.4


From d2fbec1542d2f80d1c265127c43bcad380089b4b Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Mon, 15 Dec 2014 21:28:54 +0200
Subject: [PATCH 05/12] [tb] handle SIGTERM

... CApplication::Stop cant be trusted
---
 xbmc/Application.cpp         | 17 ++++++++++++-----
 xbmc/Application.h           |  1 +
 xbmc/XBApplicationEx.cpp     |  1 +
 xbmc/XBApplicationEx.h       |  1 +
 xbmc/platform/posix/main.cpp | 15 +++++++++++++++
 5 files changed, 30 insertions(+), 5 deletions(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index 66e78fb..b1d058f 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -2346,12 +2346,12 @@ void CApplication::OnApplicationMessage(ThreadMessage* pMsg)
   switch (pMsg->dwMessage)
   {
   case TMSG_POWERDOWN:
-    Stop(EXITCODE_POWERDOWN);
+    SetExitCode(EXITCODE_POWERDOWN);
     g_powerManager.Powerdown();
     break;
 
   case TMSG_QUIT:
-    Stop(EXITCODE_QUIT);
+    SetExitCode(EXITCODE_QUIT);
     break;
   
   case TMSG_SHUTDOWN:
@@ -2372,12 +2372,13 @@ void CApplication::OnApplicationMessage(ThreadMessage* pMsg)
 
   case TMSG_RESTART:
   case TMSG_RESET:
-    Stop(EXITCODE_REBOOT);
+    SetExitCode(EXITCODE_REBOOT);
     g_powerManager.Reboot();
     break;
 
   case TMSG_RESTARTAPP:
 #if defined(TARGET_WINDOWS) || defined(TARGET_LINUX)
+    SetExitCode(EXITCODE_RESTARTAPP);
     Stop(EXITCODE_RESTARTAPP);
 #endif
     break;
@@ -2801,6 +2802,13 @@ bool CApplication::Cleanup()
   }
 }
 
+void CApplication::SetExitCode(int exitCode)
+{
+  // save it for CEC
+  m_ExitCode = exitCode;
+  m_ExitCodeSet = true;
+}
+
 void CApplication::Stop(int exitCode)
 {
   try
@@ -2808,7 +2816,7 @@ void CApplication::Stop(int exitCode)
     m_frameMoveGuard.unlock();
 
     CVariant vExitCode(CVariant::VariantTypeObject);
-    vExitCode["exitcode"] = exitCode;
+    vExitCode["exitcode"] = m_ExitCode;
     CAnnouncementManager::GetInstance().Announce(System, "xbmc", "OnQuit", vExitCode);
 
     // Abort any active screensaver
@@ -2842,7 +2850,6 @@ void CApplication::Stop(int exitCode)
 
     m_bStop = true;
     m_AppFocused = false;
-    m_ExitCode = exitCode;
     CLog::Log(LOGNOTICE, "stop all");
 
     // cancel any jobs from the jobmanager
diff --git a/xbmc/Application.h b/xbmc/Application.h
index fc4f69c..e106799 100644
--- a/xbmc/Application.h
+++ b/xbmc/Application.h
@@ -153,6 +153,7 @@ public:
 
   void StopPVRManager();
   bool IsCurrentThread() const;
+  void SetExitCode(int exitCode);
   void Stop(int exitCode);
   void RestartApp();
   void UnloadSkin(bool forReload = false);
diff --git a/xbmc/XBApplicationEx.cpp b/xbmc/XBApplicationEx.cpp
index f6fffd8..4583b41 100644
--- a/xbmc/XBApplicationEx.cpp
+++ b/xbmc/XBApplicationEx.cpp
@@ -43,6 +43,7 @@ CXBApplicationEx::CXBApplicationEx()
   m_bStop = false;
   m_AppFocused = true;
   m_ExitCode = EXITCODE_QUIT;
+  m_ExitCodeSet = false;
   m_renderGUI = false;
 }
 
diff --git a/xbmc/XBApplicationEx.h b/xbmc/XBApplicationEx.h
index c46cba1..ed3f35f 100644
--- a/xbmc/XBApplicationEx.h
+++ b/xbmc/XBApplicationEx.h
@@ -40,6 +40,7 @@ public:
   // Variables for timing
   bool m_bStop;
   int  m_ExitCode;
+  bool m_ExitCodeSet;
   bool m_AppFocused;
   bool m_renderGUI;
 
diff --git a/xbmc/platform/posix/main.cpp b/xbmc/platform/posix/main.cpp
index b6b7035..9e7309b 100644
--- a/xbmc/platform/posix/main.cpp
+++ b/xbmc/platform/posix/main.cpp
@@ -41,12 +41,27 @@
 #include "input/linux/LIRC.h"
 #endif
 #include "platform/XbmcContext.h"
+#include "Application.h"
+
+void xbmc_term_handler(int signum)
+{
+  CLog::Log(LOGINFO, "Received SIGTERM...");
+  if (!g_application.m_ExitCodeSet)
+    g_application.SetExitCode(EXITCODE_RESTARTAPP);
+  g_application.Stop(EXITCODE_RESTARTAPP);
+}
 
 #ifdef __cplusplus
 extern "C"
 #endif
 int main(int argc, char* argv[])
 {
+  // SIGTERM handler
+  struct sigaction action;
+  memset(&action, 0, sizeof(struct sigaction));
+  action.sa_handler = xbmc_term_handler;
+  sigaction(SIGTERM, &action, NULL);
+
   // set up some xbmc specific relationships
   XBMC::Context context;
 
-- 
2.7.4


From b78691378eeade120f586f7e00612c15c00cb534 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sat, 26 Sep 2015 00:32:42 +0300
Subject: [PATCH 06/12] [tb] pvr: nobody cared

---
 xbmc/pvr/channels/PVRChannel.cpp | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

diff --git a/xbmc/pvr/channels/PVRChannel.cpp b/xbmc/pvr/channels/PVRChannel.cpp
index ea1eef4..4ffdac6 100644
--- a/xbmc/pvr/channels/PVRChannel.cpp
+++ b/xbmc/pvr/channels/PVRChannel.cpp
@@ -218,10 +218,7 @@ bool CPVRChannel::Persist()
 
   if (CPVRDatabase *database = GetPVRDatabase())
   {
-    bool bReturn = database->Persist(*this) && database->CommitInsertQueries();
-    CSingleLock lock(m_critSection);
-    m_bChanged = !bReturn;
-    return bReturn;
+    // meh
   }
 
   return false;
-- 
2.7.4


From 79f3ad64664ba85de725e4d4bdeefcc07c11655e Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sun, 27 Mar 2016 15:06:13 +0300
Subject: [PATCH 07/12] [tb] all user pre-installed addons should be enabled

---
 xbmc/addons/AddonDatabase.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/xbmc/addons/AddonDatabase.cpp b/xbmc/addons/AddonDatabase.cpp
index d23be26..bb76bf9 100644
--- a/xbmc/addons/AddonDatabase.cpp
+++ b/xbmc/addons/AddonDatabase.cpp
@@ -249,7 +249,7 @@ void CAddonDatabase::SyncInstalled(const std::set<std::string>& ids,
         enable = 1;
 
       m_pDS->exec(PrepareSQL("INSERT INTO installed(addonID, enabled, installDate) "
-        "VALUES('%s', %d, '%s')", id.c_str(), enable, now.c_str()));
+        "VALUES('%s', 1, '%s')", id.c_str(), now.c_str()));
     }
 
     for (const auto& id : removed)
-- 
2.7.4


From 2ec56411ac7cee2b3ce5e2c109c4ad71fdb5c6f5 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sun, 22 May 2016 15:21:49 +0300
Subject: [PATCH 08/12] [chg] make libxslt optional

---
 configure.ac                 | 34 ++++++++++++++++++++++++++++------
 xbmc/utils/Makefile.in       |  2 ++
 xbmc/utils/ScraperParser.cpp | 18 ++++++++++++++++--
 3 files changed, 46 insertions(+), 8 deletions(-)

diff --git a/configure.ac b/configure.ac
index f906bde..00e75e9 100644
--- a/configure.ac
+++ b/configure.ac
@@ -407,6 +407,12 @@ AC_ARG_ENABLE([libbluray],
   [use_libbluray=$enableval],
   [use_libbluray=auto])
 
+AC_ARG_ENABLE([libxslt],
+  [AS_HELP_STRING([--disable-libxslt],
+  [enable libxslt (XSLT scrapers) support (default is enabled)])],
+  [use_libxslt=$enableval],
+  [use_libxslt=yes])
+
 AC_ARG_ENABLE([texturepacker],
   [AS_HELP_STRING([--enable-texturepacker],
   [enable texturepacker support (default is auto)])],
@@ -1067,12 +1073,22 @@ if test "$target_platform" = "target_android" ; then
   AC_CHECK_LIB([log],         [__android_log_vprint],, AC_MSG_ERROR($missing_library))
   AC_CHECK_LIB([jnigraphics],     [main],, AC_MSG_ERROR($missing_library))
 fi
-PKG_CHECK_MODULES([LIBXML], [libxml-2.0],
-  [INCLUDES="$INCLUDES $LIBXML_CFLAGS"; LIBS="$LIBS $LIBXML_LIBS"],
-  AC_MSG_ERROR($missing_library))
-PKG_CHECK_MODULES([LIBXSLT], [libxslt],
-  [INCLUDES="$INCLUDES $LIBXSLT_CFLAGS"; LIBS="$LIBS $LIBXSLT_LIBS"],
-  AC_MSG_ERROR($missing_library))
+
+# check for libbxslt
+AS_CASE([x$use_libxslt],
+  [xyes],[
+    PKG_CHECK_MODULES([LIBXML], [libxml-2.0],
+      [INCLUDES="$INCLUDES $LIBXML_CFLAGS"; LIBS="$LIBS $LIBXML_LIBS"],
+      AC_MSG_ERROR($missing_library))
+    PKG_CHECK_MODULES([LIBXSLT], [libxslt],
+      [INCLUDES="$INCLUDES $LIBXSLT_CFLAGS"; LIBS="$LIBS $LIBXSLT_LIBS"],
+      AC_MSG_ERROR($missing_library))
+    AC_DEFINE([HAVE_LIBXSLT], 1, [System has libxslt library])
+    AC_SUBST([HAVE_LIBXSLT], 1)
+  ],[
+    AC_SUBST([HAVE_LIBXSLT], 0)
+  ]
+)
 PKG_CHECK_MODULES([FRIBIDI],    [fribidi],
   [INCLUDES="$INCLUDES $FRIBIDI_CFLAGS"; LIBS="$LIBS $FRIBIDI_LIBS"],
   AC_MSG_ERROR($missing_library))
@@ -1886,6 +1902,12 @@ else
   final_message="$final_message\n  Bluray:\tNo"
 fi
 
+if test "$use_libxslt" = "yes"; then
+  final_message="$final_message\n  XSLT scrapers:\tYes"
+else
+  final_message="$final_message\n  XSLT scrapers:\tNo"
+fi
+
 if test "x$use_texturepacker" != "xno"; then
   AC_PATH_PROG([TEXTUREPACKER], [TexturePacker], ["none"],
     [$PATH$PATH_SEPARATOR${abs_top_srcdir}/tools/depends/native/TexturePacker/bin])
diff --git a/xbmc/utils/Makefile.in b/xbmc/utils/Makefile.in
index afc8dfa..47ad392 100644
--- a/xbmc/utils/Makefile.in
+++ b/xbmc/utils/Makefile.in
@@ -74,7 +74,9 @@ SRCS += Weather.cpp
 SRCS += XBMCTinyXML.cpp
 SRCS += XMLUtils.cpp
 SRCS += Utf8Utils.cpp
+ifeq (@HAVE_LIBXSLT@,1)
 SRCS += XSLTUtils.cpp
+endif
 SRCS += ActorProtocol.cpp 
 SRCS += SysfsUtils.cpp
 
diff --git a/xbmc/utils/ScraperParser.cpp b/xbmc/utils/ScraperParser.cpp
index 57476ed..23e627f 100644
--- a/xbmc/utils/ScraperParser.cpp
+++ b/xbmc/utils/ScraperParser.cpp
@@ -28,7 +28,9 @@
 #include "utils/StringUtils.h"
 #include "log.h"
 #include "CharsetConverter.h"
+#ifdef HAVE_LIBXSLT
 #include "utils/XSLTUtils.h"
+#endif
 #include "utils/XMLUtils.h"
 #include <sstream>
 #include <cstring>
@@ -338,6 +340,7 @@ void CScraperParser::ParseExpression(const std::string& input, std::string& dest
 
 void CScraperParser::ParseXSLT(const std::string& input, std::string& dest, TiXmlElement* element, bool bAppend)
 {
+#ifdef HAVE_LIBXSLT
   TiXmlElement* pSheet = element->FirstChildElement();
   if (pSheet)
   {
@@ -354,13 +357,18 @@ void CScraperParser::ParseXSLT(const std::string& input, std::string& dest, TiXm
 
     xsltUtils.XSLTTransform(dest);
   }
+#endif
 }
 
 TiXmlElement *FirstChildScraperElement(TiXmlElement *element)
 {
   for (TiXmlElement *child = element->FirstChildElement(); child; child = child->NextSiblingElement())
   {
-    if (child->ValueStr() == "RegExp" || child->ValueStr() == "XSLT")
+#ifdef HAVE_LIBXSLT
+    if (child->ValueStr() == "XSLT")
+      return child;
+#endif
+    if (child->ValueStr() == "RegExp")
       return child;
   }
   return NULL;
@@ -370,7 +378,11 @@ TiXmlElement *NextSiblingScraperElement(TiXmlElement *element)
 {
   for (TiXmlElement *next = element->NextSiblingElement(); next; next = next->NextSiblingElement())
   {
-    if (next->ValueStr() == "RegExp" || next->ValueStr() == "XSLT")
+#ifdef HAVE_LIBXSLT
+    if (next->ValueStr() == "XSLT")
+      return next;
+#endif
+    if (next->ValueStr() == "RegExp")
       return next;
   }
   return NULL;
@@ -432,9 +444,11 @@ void CScraperParser::ParseNext(TiXmlElement* element)
     {
       if (iDest-1 < MAX_SCRAPER_BUFFERS && iDest-1 > -1)
       {
+#ifdef HAVE_LIBXSLT
         if (pReg->ValueStr() == "XSLT")
           ParseXSLT(strInput, m_param[iDest - 1], pReg, bAppend);
         else
+#endif
           ParseExpression(strInput, m_param[iDest - 1],pReg,bAppend);
       }
       else
-- 
2.7.4


From ddf48a71bae81d1d4e17e550f0806da8ed520bdc Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Fri, 27 May 2016 22:08:32 +0300
Subject: [PATCH 09/12] [aml] do reboot/poweroff in FallbackPowerSyscall

... aml needs suspend instead of poweroff...
---
 xbmc/powermanagement/linux/FallbackPowerSyscall.h | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/xbmc/powermanagement/linux/FallbackPowerSyscall.h b/xbmc/powermanagement/linux/FallbackPowerSyscall.h
index a6ed27b..a3344ab 100644
--- a/xbmc/powermanagement/linux/FallbackPowerSyscall.h
+++ b/xbmc/powermanagement/linux/FallbackPowerSyscall.h
@@ -25,10 +25,16 @@
 class CFallbackPowerSyscall : public CPowerSyscallWithoutEvents
 {
 public:
-  virtual bool Powerdown() {return true; }
+  virtual bool Powerdown() {
+    system("systemctl suspend");
+    return true;
+  }
   virtual bool Suspend() {return false; }
   virtual bool Hibernate() {return false; }
-  virtual bool Reboot() {return true; }
+  virtual bool Reboot() {
+    system("systemctl reboot");
+    return true;
+  }
 
   virtual bool CanPowerdown() {return true; }
   virtual bool CanSuspend() {return false; }
-- 
2.7.4


From a639f431fd92f985fadf6b61091d9a9f6d6b3369 Mon Sep 17 00:00:00 2001
From: popcornmix <popcornmix@gmail.com>
Date: Sun, 6 Mar 2016 14:16:17 +0000
Subject: [PATCH 10/12] codecoverlay: Include codec name in overlay

---
 .../VideoPlayer/DVDCodecs/Audio/DVDAudioCodecFFmpeg.cpp      |  2 +-
 xbmc/cores/VideoPlayer/DVDCodecs/Audio/DVDAudioCodecFFmpeg.h |  3 ++-
 xbmc/cores/VideoPlayer/VideoPlayerAudio.cpp                  |  6 +++++-
 xbmc/cores/VideoPlayer/VideoPlayerAudio.h                    |  1 +
 xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp                  | 12 +++++++++++-
 xbmc/cores/VideoPlayer/VideoPlayerVideo.h                    |  4 ++++
 6 files changed, 24 insertions(+), 4 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Audio/DVDAudioCodecFFmpeg.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Audio/DVDAudioCodecFFmpeg.cpp
index a21894e..23bef5e 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Audio/DVDAudioCodecFFmpeg.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Audio/DVDAudioCodecFFmpeg.cpp
@@ -125,7 +125,7 @@ bool CDVDAudioCodecFFmpeg::Open(CDVDStreamInfo &hints, CDVDCodecOptions &options
 
   m_iSampleFormat = AV_SAMPLE_FMT_NONE;
   m_matrixEncoding = AV_MATRIX_ENCODING_NONE;
-
+  m_codecname = m_pCodecContext->codec->name;
   return true;
 }
 
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Audio/DVDAudioCodecFFmpeg.h b/xbmc/cores/VideoPlayer/DVDCodecs/Audio/DVDAudioCodecFFmpeg.h
index a15317a..a9338a6 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Audio/DVDAudioCodecFFmpeg.h
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Audio/DVDAudioCodecFFmpeg.h
@@ -41,7 +41,7 @@ public:
   virtual int GetData(uint8_t** dst);
   virtual void Reset();
   virtual AEAudioFormat GetFormat() { return m_format; }
-  virtual const char* GetName() { return "FFmpeg"; }
+  virtual const char* GetName() { return m_codecname.c_str(); }
   virtual enum AVMatrixEncoding GetMatrixEncoding();
   virtual enum AVAudioServiceType GetAudioServiceType();
   virtual int GetProfile();
@@ -64,6 +64,7 @@ protected:
 
   int m_channels;
   uint64_t m_layout;
+  std::string m_codecname;
 
   void BuildChannelMap();
   void ConvertToFloat();
diff --git a/xbmc/cores/VideoPlayer/VideoPlayerAudio.cpp b/xbmc/cores/VideoPlayer/VideoPlayerAudio.cpp
index e8f073f..93f755a 100644
--- a/xbmc/cores/VideoPlayer/VideoPlayerAudio.cpp
+++ b/xbmc/cores/VideoPlayer/VideoPlayerAudio.cpp
@@ -134,6 +134,8 @@ void CVideoPlayerAudio::OpenStream(CDVDStreamInfo &hints, CDVDAudioCodec* codec)
   if (hints.samplerate != m_streaminfo.samplerate)
     SwitchCodecIfNeeded();
 
+  m_codecname = m_pAudioCodec->GetName();
+
   m_audioClock = 0;
   m_stalled = m_messageQueue.GetPacketCount(CDVDMsg::DEMUXER_PACKET) == 0;
 
@@ -206,8 +208,9 @@ void CVideoPlayerAudio::UpdatePlayerInfo()
 {
   std::ostringstream s;
   s << "aq:"     << std::setw(2) << std::min(99,m_messageQueue.GetLevel()) << "%";
+  s << ", ac:"   << m_codecname;
   s << ", Kb/s:" << std::fixed << std::setprecision(2) << (double)GetAudioBitrate() / 1024.0;
-
+  s << ", " << m_streaminfo.channels << " channel, " << m_streaminfo.samplerate/1000 << " kHz";
   //print the inverse of the resample ratio, since that makes more sense
   //if the resample ratio is 0.5, then we're playing twice as fast
   if (m_synctype == SYNC_RESAMPLE)
@@ -596,6 +599,7 @@ bool CVideoPlayerAudio::SwitchCodecIfNeeded()
 
   delete m_pAudioCodec;
   m_pAudioCodec = codec;
+  m_codecname = m_pAudioCodec->GetName();
 
   return true;
 }
diff --git a/xbmc/cores/VideoPlayer/VideoPlayerAudio.h b/xbmc/cores/VideoPlayer/VideoPlayerAudio.h
index f6b5003..78572ba 100644
--- a/xbmc/cores/VideoPlayer/VideoPlayerAudio.h
+++ b/xbmc/cores/VideoPlayer/VideoPlayerAudio.h
@@ -95,6 +95,7 @@ protected:
   CDVDClock* m_pClock; // dvd master clock
   CDVDAudioCodec* m_pAudioCodec; // audio codec
   BitstreamStats m_audioStats;
+  std::string m_codecname;
 
   int m_speed;
   bool m_stalled;
diff --git a/xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp b/xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp
index cdd1938..3a15b4d 100644
--- a/xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp
+++ b/xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp
@@ -95,6 +95,9 @@ CVideoPlayerVideo::CVideoPlayerVideo(CDVDClock* pClock
   m_iFrameRateLength = 0;
   m_bFpsInvalid = false;
   m_bAllowFullscreen = false;
+  m_width = 0;
+  m_height = 0;
+  m_display_aspect = 0.0f;
 }
 
 CVideoPlayerVideo::~CVideoPlayerVideo()
@@ -190,6 +193,7 @@ void CVideoPlayerVideo::OpenStream(CDVDStreamInfo &hint, CDVDVideoCodec* codec)
   m_pVideoCodec = codec;
   m_hints   = hint;
   m_stalled = m_messageQueue.GetPacketCount(CDVDMsg::DEMUXER_PACKET) == 0;
+  m_codecname = m_pVideoCodec->GetName();
   m_packets.clear();
   m_syncState = IDVDStreamPlayer::SYNC_STARTING;
 }
@@ -605,6 +609,7 @@ bool CVideoPlayerVideo::ProcessDecoderOutput(int &decoderState, double &frametim
 
       if (m_syncState == IDVDStreamPlayer::SYNC_STARTING && !(m_picture.iFlags & DVP_FLAG_DROPPED))
       {
+        m_codecname = m_pVideoCodec->GetName();
         m_syncState = IDVDStreamPlayer::SYNC_WAITSYNC;
         SStartMsg msg;
         msg.player = VideoPlayer_VIDEO;
@@ -887,6 +892,9 @@ int CVideoPlayerVideo::OutputPicture(const DVDVideoPicture* src, double pts)
     m_droppingStats.AddOutputDropGain(pts, 1);
     return EOS_DROPPED;
   }
+  m_width = pPicture->iWidth;
+  m_height = pPicture->iHeight;
+  m_display_aspect = (float)pPicture->iDisplayWidth / (float)pPicture->iDisplayHeight;
 
   m_renderManager.FlipPage(m_bAbortOutput, pts, -1, mDisplayField);
 
@@ -897,8 +905,10 @@ std::string CVideoPlayerVideo::GetPlayerInfo()
 {
   std::ostringstream s;
   s << "vq:"   << std::setw(2) << std::min(99,GetLevel()) << "%";
+  s << ", dc:"   << m_codecname;
   s << ", Mb/s:" << std::fixed << std::setprecision(2) << (double)GetVideoBitrate() / (1024.0*1024.0);
-  s << ", fr:"     << std::fixed << std::setprecision(3) << m_fFrameRate;
+  s << ", " << m_width << "x" << m_height;
+  s << ", fr:"   << std::fixed << std::setprecision(3) << m_fFrameRate << ", ar:" << std::setprecision(2) << m_display_aspect;
   s << ", drop:" << m_iDroppedFrames;
   s << ", skip:" << m_renderManager.GetSkippedFrames();
 
diff --git a/xbmc/cores/VideoPlayer/VideoPlayerVideo.h b/xbmc/cores/VideoPlayer/VideoPlayerVideo.h
index 4dff792..3bfc052 100644
--- a/xbmc/cores/VideoPlayer/VideoPlayerVideo.h
+++ b/xbmc/cores/VideoPlayer/VideoPlayerVideo.h
@@ -131,6 +131,10 @@ protected:
   int m_speed;
   bool m_stalled;
   IDVDStreamPlayer::ESyncState m_syncState;
+  std::string m_codecname;
+  int m_width;
+  int m_height;
+  float m_display_aspect;
   std::atomic_bool m_bAbortOutput;
 
   BitstreamStats m_videoStats;
-- 
2.7.4


From d7d7f2c12527c5c74f8524f929efa6fcd69a8d22 Mon Sep 17 00:00:00 2001
From: Alex Deryskyba <alex@codesnake.com>
Date: Sat, 20 Sep 2014 04:43:52 +0300
Subject: [PATCH 11/12] [aml] Fill audio packets completely when resampling to
 prevent 'audio data unaligned' kernel warnings

---
 xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.cpp | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.cpp b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.cpp
index a64ee31..dc97a92 100644
--- a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.cpp
+++ b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.cpp
@@ -159,7 +159,11 @@ CActiveAEBufferPoolResample::CActiveAEBufferPoolResample(AEAudioFormat inputForm
     m_inputFormat.m_channelLayout += AE_CH_FC;
   }
   m_resampler = NULL;
+#ifdef HAS_LIBAMCODEC
+  m_fillPackets = true;
+#else
   m_fillPackets = false;
+#endif
   m_drain = false;
   m_empty = true;
   m_procSample = NULL;
-- 
2.7.4


From 1a401d403f41518cccdd0283d85d8d393b511bc3 Mon Sep 17 00:00:00 2001
From: Alex Deryskyba <alex@codesnake.com>
Date: Sat, 23 Apr 2016 16:16:45 +0200
Subject: [PATCH 12/12] Use amlvideo driver for audio/video sync

---
 .../cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp | 197 ++++++++++++++-------
 xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h  |  13 +-
 .../DVDCodecs/Video/DVDVideoCodecAmlogic.cpp       |   5 +-
 .../DVDCodecs/Video/DVDVideoCodecAmlogic.h         |   4 +-
 .../VideoRenderers/HwDecRender/RendererAML.cpp     |  25 ++-
 .../VideoRenderers/HwDecRender/RendererAML.h       |   6 +
 xbmc/utils/AMLUtils.cpp                            |  12 ++
 7 files changed, 188 insertions(+), 74 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
index f714721..78be5e7 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
@@ -54,12 +54,49 @@ extern "C" {
 #include <stdio.h>
 #include <stdlib.h>
 #include <sys/ioctl.h>
+#include <linux/videodev2.h>
 
 // amcodec include
 extern "C" {
 #include <amcodec/codec.h>
 }  // extern "C"
 
+class PosixFile
+{
+public:
+  PosixFile() :
+    m_fd(-1)
+  {
+  }
+
+  PosixFile(int fd) :
+    m_fd(fd)
+  {
+  }
+
+  ~PosixFile()
+  {
+    if (m_fd >= 0)
+     close(m_fd);
+  }
+
+  bool Open(const std::string &pathName, int flags)
+  {
+    m_fd = open(pathName.c_str(), flags);
+    return m_fd >= 0;
+  }
+
+  int GetDescriptor() const { return m_fd; }
+
+  int IOControl(unsigned long request, void *param)
+  {
+    return ioctl(m_fd, request, param);
+  }
+
+private:
+  int m_fd;
+};
+
 typedef struct {
   bool          noblock;
   int           video_pid;
@@ -364,27 +401,6 @@ void dumpfile_write(am_private_t *para, void* buf, int bufsiz)
     write(para->dumpfile, buf, bufsiz);
 }
 
-/*************************************************************************/
-/*************************************************************************/
-static int64_t get_pts_video()
-{
-  int fd = open("/sys/class/tsync/pts_video", O_RDONLY);
-  if (fd >= 0)
-  {
-    char pts_str[16];
-    int size = read(fd, pts_str, sizeof(pts_str));
-    close(fd);
-    if (size > 0)
-    {
-      unsigned long pts = strtoul(pts_str, NULL, 16);
-      return pts;
-    }
-  }
-
-  CLog::Log(LOGERROR, "get_pts_video: open /tsync/event error");
-  return -1;
-}
-
 static int set_pts_pcrscr(int64_t value)
 {
   int fd = open("/sys/class/tsync/pts_pcrscr", O_WRONLY);
@@ -1418,7 +1434,6 @@ bool CAMLCodec::OpenDecoder(CDVDStreamInfo &hints)
   m_speed = DVD_PLAYSPEED_NORMAL;
   m_1st_pts = 0;
   m_cur_pts = 0;
-  m_player_pts = 0;
   m_cur_pictcnt = 0;
   m_old_pictcnt = 0;
   m_dst_rect.SetRect(0, 0, 0, 0);
@@ -1430,6 +1445,12 @@ bool CAMLCodec::OpenDecoder(CDVDStreamInfo &hints)
   m_start_pts = 0;
   m_hints = hints;
 
+  if (!OpenAmlVideo(hints))
+  {
+    CLog::Log(LOGERROR, "CAMLCodec::OpenDecoder - cannot open amlvideo device");
+    return false;
+  }
+
   ShowMainVideo(false);
 
   am_packet_init(&am_private->am_pkt);
@@ -1652,6 +1673,53 @@ bool CAMLCodec::OpenDecoder(CDVDStreamInfo &hints)
   return true;
 }
 
+bool CAMLCodec::OpenAmlVideo(const CDVDStreamInfo &hints)
+{
+  PosixFilePtr amlVideoFile = std::make_shared<PosixFile>();
+  if (!amlVideoFile->Open("/dev/video10", O_RDWR | O_NONBLOCK))
+  {
+    CLog::Log(LOGERROR, "CAMLCodec::OpenAmlVideo - cannot open V4L amlvideo device /dev/video10: %s", strerror(errno));
+    return false;
+  }
+
+  m_amlVideoFile = amlVideoFile;
+
+  m_defaultVfmMap = GetVfmMap("default");
+  SetVfmMap("default", "decoder ppmgr deinterlace amlvideo amvideo");
+
+  SysfsUtils::SetInt("/sys/module/amlvideodri/parameters/freerun_mode", 1);
+
+  return true;
+}
+
+std::string CAMLCodec::GetVfmMap(const std::string &name)
+{
+  std::string vfmMap;
+  SysfsUtils::GetString("/sys/class/vfm/map", vfmMap);
+  std::vector<std::string> sections = StringUtils::Split(vfmMap, '\n');
+  std::string sectionMap;
+  for (size_t i = 0; i < sections.size(); ++i)
+  {
+    if (StringUtils::StartsWith(sections[i], name + " {"))
+    {
+      sectionMap = sections[i];
+      break;
+    }
+  }
+
+  int openingBracePos = sectionMap.find('{') + 1;
+  sectionMap = sectionMap.substr(openingBracePos, sectionMap.size() - openingBracePos - 1);
+  StringUtils::Replace(sectionMap, "(0)", "");
+
+  return sectionMap;
+}
+
+void CAMLCodec::SetVfmMap(const std::string &name, const std::string &map)
+{
+  SysfsUtils::SetString("/sys/class/vfm/map", "rm " + name);
+  SysfsUtils::SetString("/sys/class/vfm/map", "add " + name + " " + map);
+}
+
 void CAMLCodec::CloseDecoder()
 {
   CLog::Log(LOGDEBUG, "CAMLCodec::CloseDecoder");
@@ -1674,6 +1742,14 @@ void CAMLCodec::CloseDecoder()
   SysfsUtils::SetInt("/sys/class/tsync/enable", 1);
 
   ShowMainVideo(false);
+
+  CloseAmlVideo();
+}
+
+void CAMLCodec::CloseAmlVideo()
+{
+  m_amlVideoFile.reset();
+  SetVfmMap("default", m_defaultVfmMap);
 }
 
 void CAMLCodec::Reset()
@@ -1723,7 +1799,6 @@ int CAMLCodec::Decode(uint8_t *pData, size_t iSize, double dts, double pts)
 
   if (pData)
   {
-    m_player_pts = pts;
     am_private->am_pkt.data = pData;
     am_private->am_pkt.data_size = iSize;
 
@@ -1744,7 +1819,6 @@ int CAMLCodec::Decode(uint8_t *pData, size_t iSize, double dts, double pts)
     if (am_private->am_pkt.avpts != (int64_t)AV_NOPTS_VALUE)
       am_private->am_pkt.avpts -= m_start_pts;
 
-
     // handle dts, including 31bit wrap, aml can only handle 31
     // bit dts as it uses an int in kernel.
     if (dts == DVD_NOPTS_VALUE)
@@ -1801,28 +1875,20 @@ int CAMLCodec::Decode(uint8_t *pData, size_t iSize, double dts, double pts)
   if (iSize < 20)
     target_timesize = 2.0;
 
+  int rtn = 0;
+
   // keep hw buffered demux above 1 second
-  if (GetTimeSize() < target_timesize && m_speed == DVD_PLAYSPEED_NORMAL)
-    return VC_BUFFER;
+  if (GetTimeSize() < target_timesize/* && m_speed == DVD_PLAYSPEED_NORMAL*/)
+    rtn |= VC_BUFFER;
 
   // wait until we get a new frame or 25ms,
   if (m_old_pictcnt == m_cur_pictcnt)
     m_ready_event.WaitMSec(25);
 
-  // we must return VC_BUFFER or VC_PICTURE,
-  // default to VC_BUFFER.
-  int rtn = VC_BUFFER;
-  m_player_pts = DVD_NOPTS_VALUE;
   if (m_old_pictcnt != m_cur_pictcnt)
   {
     m_old_pictcnt++;
-    rtn = VC_PICTURE;
-    m_player_pts = pts;
-    // we got a new pict, try and keep hw buffered demux above 2 seconds.
-    // this, combined with the above 1 second check, keeps hw buffered demux between 1 and 2 seconds.
-    // we also check to make sure we keep from filling hw buffer.
-    if (GetTimeSize() < 2.0 && GetDataSize() < m_vbufsize/3)
-      rtn |= VC_BUFFER;
+    rtn |= VC_PICTURE;
   }
 /*
   CLog::Log(LOGDEBUG, "CAMLCodec::Decode: "
@@ -1832,6 +1898,24 @@ int CAMLCodec::Decode(uint8_t *pData, size_t iSize, double dts, double pts)
   return rtn;
 }
 
+int CAMLCodec::DequeueBuffer(int &pts)
+{
+  v4l2_buffer vbuf = { 0 };
+  vbuf.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
+  //vbuf.memory = V4L2_MEMORY_DMABUF;
+
+  if (m_amlVideoFile->IOControl(VIDIOC_DQBUF, &vbuf) < 0)
+  {
+    if (errno != EAGAIN)
+      CLog::Log(LOGERROR, "CAMLCodec::DequeueBuffer - VIDIOC_DQBUF failed: %s", strerror(errno));
+    return -errno;
+  }
+
+  pts = vbuf.timestamp.tv_usec;
+  
+  return 0;
+}
+
 bool CAMLCodec::GetPicture(DVDVideoPicture *pDvdVideoPicture)
 {
   if (!m_opened)
@@ -1843,7 +1927,7 @@ bool CAMLCodec::GetPicture(DVDVideoPicture *pDvdVideoPicture)
 
   pDvdVideoPicture->dts = DVD_NOPTS_VALUE;
   if (m_speed == DVD_PLAYSPEED_NORMAL)
-    pDvdVideoPicture->pts = m_player_pts;
+    pDvdVideoPicture->pts = (double)m_cur_pts / PTS_FREQ * DVD_TIME_BASE;
   else
   {
     if (m_cur_pts == 0)
@@ -1926,40 +2010,23 @@ void CAMLCodec::Process()
 {
   CLog::Log(LOGDEBUG, "CAMLCodec::Process Started");
 
-  // bump our priority to be level with SoftAE
-  SetPriority(THREAD_PRIORITY_ABOVE_NORMAL);
   while (!m_bStop)
   {
-    int64_t pts_video = 0;
-    if (am_private->am_pkt.lastpts > 0)
+    if (m_dll->codec_poll_cntl(&am_private->vcodec) < 0)
     {
-      // this is a blocking poll that returns every vsync.
-      // since we are running at a higher priority, make sure
-      // we sleep if the call fails or does a timeout.
-      if (m_dll->codec_poll_cntl(&am_private->vcodec) < 0)
-      {
-        CLog::Log(LOGDEBUG, "CAMLCodec::Process: codec_poll_cntl failed");
-        Sleep(10);
-      }
-
-      pts_video = get_pts_video();
-      if (m_cur_pts != pts_video)
-      {
-        //CLog::Log(LOGDEBUG, "CAMLCodec::Process: pts_video(%lld), pts_video/PTS_FREQ(%f), duration(%f)",
-        //  pts_video, (double)pts_video/PTS_FREQ, 1.0/((double)(pts_video - m_cur_pts)/PTS_FREQ));
-
-        // other threads look at these, do them first
-        m_cur_pts = pts_video;
-        m_cur_pictcnt++;
-        m_ready_event.Set();
-      }
+      CLog::Log(LOGDEBUG, "CAMLCodec::Process: codec_poll_cntl failed");
+      Sleep(10);
     }
-    else
+
+    int pts = 0;
+    if (DequeueBuffer(pts) == 0)
     {
-      Sleep(100);
+      m_cur_pts = pts;
+      m_cur_pictcnt++;
+      m_ready_event.Set();
     }
   }
-  SetPriority(THREAD_PRIORITY_NORMAL);
+
   CLog::Log(LOGDEBUG, "CAMLCodec::Process Stopped");
 }
 
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h
index 5b9ee4f..5cd99e0 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h
@@ -25,11 +25,15 @@
 #include "guilib/Geometry.h"
 #include "rendering/RenderSystem.h"
 #include "threads/Thread.h"
+#include <deque>
 
 typedef struct am_private_t am_private_t;
 
 class DllLibAmCodec;
 
+class PosixFile;
+typedef std::shared_ptr<PosixFile> PosixFilePtr;
+
 class CAMLCodec : public CThread
 {
 public:
@@ -47,6 +51,7 @@ public:
   int           GetDataSize();
   double        GetTimeSize();
   void          SetVideoRect(const CRect &SrcRect, const CRect &DestRect);
+  int64_t       GetCurPts() const { return m_cur_pts; }
 
 protected:
   virtual void  Process();
@@ -60,6 +65,11 @@ private:
   void          SetVideoSaturation(const int saturation);
   void          SetVideo3dMode(const int mode3d);
   std::string   GetStereoMode();
+  bool          OpenAmlVideo(const CDVDStreamInfo &hints);
+  void          CloseAmlVideo();
+  std::string   GetVfmMap(const std::string &name);
+  void          SetVfmMap(const std::string &name, const std::string &map);
+  int           DequeueBuffer(int &pts);
 
   DllLibAmCodec   *m_dll;
   bool             m_opened;
@@ -86,5 +96,6 @@ private:
   int              m_contrast;
   int              m_brightness;
 
-  double m_player_pts;
+  PosixFilePtr     m_amlVideoFile;
+  std::string      m_defaultVfmMap;
 };
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
index 1678bed..80f25dd 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
@@ -294,7 +294,7 @@ bool CDVDVideoCodecAmlogic::GetPicture(DVDVideoPicture* pDvdVideoPicture)
     m_Codec->GetPicture(&m_videobuffer);
   *pDvdVideoPicture = m_videobuffer;
 
-  CDVDAmlogicInfo* info = new CDVDAmlogicInfo(this, m_Codec);
+  CDVDAmlogicInfo* info = new CDVDAmlogicInfo(this, m_Codec, (int)m_Codec->GetCurPts());
 
   {
     CSingleLock lock(m_secure);
@@ -573,10 +573,11 @@ void CDVDVideoCodecAmlogic::RemoveInfo(CDVDAmlogicInfo *info)
   m_inflight.erase(m_inflight.find(info));
 }
 
-CDVDAmlogicInfo::CDVDAmlogicInfo(CDVDVideoCodecAmlogic *codec, CAMLCodec *amlcodec)
+CDVDAmlogicInfo::CDVDAmlogicInfo(CDVDVideoCodecAmlogic *codec, CAMLCodec *amlcodec, int omxPts)
   : m_refs(0)
   , m_codec(codec)
   , m_amlCodec(amlcodec)
+  , m_omxPts(omxPts)
 {
 }
 
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.h b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.h
index c15238b..a4cc25c 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.h
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.h
@@ -36,13 +36,14 @@ class CDVDVideoCodecAmlogic;
 class CDVDAmlogicInfo
 {
 public:
-  CDVDAmlogicInfo(CDVDVideoCodecAmlogic *codec, CAMLCodec *amlcodec);
+  CDVDAmlogicInfo(CDVDVideoCodecAmlogic *codec, CAMLCodec *amlcodec, int omxPts);
 
   // reference counting
   CDVDAmlogicInfo* Retain();
   long             Release();
 
   CAMLCodec *getAmlCodec() const;
+  int GetOmxPts() const { return m_omxPts; }
   void invalidate();
 
 protected:
@@ -51,6 +52,7 @@ protected:
 
   CDVDVideoCodecAmlogic* m_codec;
   CAMLCodec* m_amlCodec;
+  int m_omxPts;
 };
 
 class CDVDVideoCodecAmlogic : public CDVDVideoCodec
diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/RendererAML.cpp b/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/RendererAML.cpp
index f6b7bb1..de9afbd 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/RendererAML.cpp
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/RendererAML.cpp
@@ -27,18 +27,23 @@
 #include "cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h"
 #include "utils/log.h"
 #include "utils/GLUtils.h"
+#include "utils/SysfsUtils.h"
 #include "settings/MediaSettings.h"
 #include "windowing/WindowingFactory.h"
 #include "cores/VideoPlayer/VideoRenderers/RenderCapture.h"
 
+#include <sys/ioctl.h>
+#include <linux/fb.h>
+
 CRendererAML::CRendererAML()
 {
-
+  m_fbHandle = open("/dev/fb0", O_RDWR);
+  m_prevPts = -1;
 }
 
 CRendererAML::~CRendererAML()
 {
-
+  close(m_fbHandle);
 }
 
 bool CRendererAML::RenderCapture(CRenderCapture* capture)
@@ -118,7 +123,7 @@ bool CRendererAML::LoadShadersHook()
 {
   CLog::Log(LOGNOTICE, "GL: Using AML render method");
   m_textureTarget = GL_TEXTURE_2D;
-  m_renderMethod = RENDER_FMT_AML;
+  m_renderMethod = RENDER_BYPASS;
   return false;
 }
 
@@ -132,15 +137,25 @@ bool CRendererAML::RenderUpdateVideoHook(bool clear, DWORD flags, DWORD alpha)
   ManageRenderArea();
 
   CDVDAmlogicInfo *amli = static_cast<CDVDAmlogicInfo *>(m_buffers[m_iYV12RenderBuffer].hwDec);
-  if (amli)
+  if (amli && amli->GetOmxPts() != m_prevPts)
   {
+    m_prevPts = amli->GetOmxPts();
+    SysfsUtils::SetInt("/sys/module/amvideo/parameters/omx_pts", amli->GetOmxPts());
+
     CAMLCodec *amlcodec = amli->getAmlCodec();
     if (amlcodec)
       amlcodec->SetVideoRect(m_sourceRect, m_destRect);
   }
 
+  WaitVsync();
+
   return true;
 }
 
-#endif
+void CRendererAML::WaitVsync()
+{
+  if (m_fbHandle >= 0)
+    ioctl(m_fbHandle, FBIO_WAITFORVSYNC, 0);
+}
 
+#endif
diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/RendererAML.h b/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/RendererAML.h
index deea29b..e10a85c 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/RendererAML.h
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/RendererAML.h
@@ -55,6 +55,12 @@ protected:
   virtual bool RenderHook(int index);  
   virtual int  GetImageHook(YV12Image *image, int source = AUTOSOURCE, bool readonly = false);
   virtual bool RenderUpdateVideoHook(bool clear, DWORD flags = 0, DWORD alpha = 255);
+
+private:
+  void WaitVsync();
+
+  int m_fbHandle;
+  int m_prevPts;
 };
 
 #endif
diff --git a/xbmc/utils/AMLUtils.cpp b/xbmc/utils/AMLUtils.cpp
index 5915e61..ff22768 100644
--- a/xbmc/utils/AMLUtils.cpp
+++ b/xbmc/utils/AMLUtils.cpp
@@ -126,6 +126,18 @@ bool aml_permissions()
     {
       CLog::Log(LOGERROR, "AML: no rw on /sys/class/ppmgr/ppmgr_3d_mode");
     }
+    if (!SysfsUtils::HasRW("/dev/video10"))
+    {
+      CLog::Log(LOGERROR, "AML: no rw on /dev/video10");
+    }
+    if (!SysfsUtils::HasRW("/sys/module/amvideo/parameters/omx_pts"))
+    {
+      CLog::Log(LOGERROR, "AML: no rw on /sys/module/amvideo/parameters/omx_pts");
+    }
+    if (!SysfsUtils::HasRW("/sys/module/amlvideodri/parameters/freerun_mode"))
+    {
+      CLog::Log(LOGERROR, "AML: no rw on /sys/module/amlvideodri/parameters/freerun_mode");
+    }
 #ifndef TARGET_ANDROID
     if (!SysfsUtils::HasRW("/sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq"))
     {
-- 
2.7.4

