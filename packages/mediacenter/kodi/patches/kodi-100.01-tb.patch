From 78439e455f954bdb01343bcef8d4e34150d7b162 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sat, 18 Apr 2015 15:12:49 +0300
Subject: [PATCH 01/24] [tb] enable PYTHONOPTIMIZE with external Python

---
 xbmc/interfaces/python/XBPython.cpp | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/xbmc/interfaces/python/XBPython.cpp b/xbmc/interfaces/python/XBPython.cpp
index 1b27903..c8de485 100644
--- a/xbmc/interfaces/python/XBPython.cpp
+++ b/xbmc/interfaces/python/XBPython.cpp
@@ -569,10 +569,9 @@ bool XBPython::OnScriptInitialized(ILanguageInvoker *invoker)
     // at http://docs.python.org/using/cmdline.html#environment-variables
 
 #if !defined(TARGET_WINDOWS) && !defined(TARGET_ANDROID)
-    /* PYTHONOPTIMIZE is set off intentionally when using external Python.
-    Reason for this is because we cannot be sure what version of Python
-    was used to compile the various Python object files (i.e. .pyo,
-    .pyc, etc.). */
+    // Required for python to find optimized code (pyo) files
+    setenv("PYTHONOPTIMIZE", "1", 1);
+
     // check if we are running as real xbmc.app or just binary
     if (!CUtil::GetFrameworksPath(true).empty())
     {
-- 
2.7.3


From 46b5d4c5d8da7138e97e5dd9c53325e2ecbc4407 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sat, 18 Apr 2015 15:03:31 +0300
Subject: [PATCH 02/24] [tb] disable online check

---
 xbmc/GUIInfoManager.cpp              | 1 -
 xbmc/utils/SystemInfo.cpp            | 5 +----
 xbmc/windows/GUIWindowSystemInfo.cpp | 1 -
 3 files changed, 1 insertion(+), 6 deletions(-)

diff --git a/xbmc/GUIInfoManager.cpp b/xbmc/GUIInfoManager.cpp
index 226dc43..e5d2a45 100644
--- a/xbmc/GUIInfoManager.cpp
+++ b/xbmc/GUIInfoManager.cpp
@@ -309,7 +309,6 @@ const infomap system_labels[] =  {{ "hasnetwork",       SYSTEM_ETHERNET_LINK_ACT
                                   { "currentcontrol",   SYSTEM_CURRENT_CONTROL },
                                   { "currentcontrolid", SYSTEM_CURRENT_CONTROL_ID },
                                   { "dvdlabel",         SYSTEM_DVD_LABEL },
-                                  { "internetstate",    SYSTEM_INTERNET_STATE },
                                   { "osversioninfo",    SYSTEM_OS_VERSION_INFO },
                                   { "kernelversion",    SYSTEM_OS_VERSION_INFO }, // old, not correct name
                                   { "uptime",           SYSTEM_UPTIME },
diff --git a/xbmc/utils/SystemInfo.cpp b/xbmc/utils/SystemInfo.cpp
index eb85abb..123e99d 100644
--- a/xbmc/utils/SystemInfo.cpp
+++ b/xbmc/utils/SystemInfo.cpp
@@ -247,7 +247,6 @@ bool CSysInfoJob::DoWork()
 {
   m_info.systemUptime      = GetSystemUpTime(false);
   m_info.systemTotalUptime = GetSystemUpTime(true);
-  m_info.internetState     = GetInternetState();
   m_info.videoEncoder      = GetVideoEncoder();
   m_info.cpuFrequency      = GetCPUFreqInfo();
   m_info.osVersionInfo     = CSysInfo::GetOsPrettyNameWithVersion() + " (kernel: " + CSysInfo::GetKernelName() + " " + CSysInfo::GetKernelVersionFull() + ")";
@@ -1023,9 +1022,7 @@ int CSysInfo::GetXbmcBitness(void)
 
 bool CSysInfo::HasInternet()
 {
-  if (m_info.internetState != CSysData::UNKNOWN)
-    return m_info.internetState == CSysData::CONNECTED;
-  return (m_info.internetState = CSysInfoJob::GetInternetState()) == CSysData::CONNECTED;
+  return m_info.internetState == CSysData::UNKNOWN;
 }
 
 std::string CSysInfo::GetHddSpaceInfo(int drive, bool shortText)
diff --git a/xbmc/windows/GUIWindowSystemInfo.cpp b/xbmc/windows/GUIWindowSystemInfo.cpp
index 4184db0..0cd539e 100644
--- a/xbmc/windows/GUIWindowSystemInfo.cpp
+++ b/xbmc/windows/GUIWindowSystemInfo.cpp
@@ -125,7 +125,6 @@ void CGUIWindowSystemInfo::FrameMove()
     SetControlLabel(i++, "%s: %s", 13160, NETWORK_GATEWAY_ADDRESS);
     SetControlLabel(i++, "%s: %s", 13161, NETWORK_DNS1_ADDRESS);
     SetControlLabel(i++, "%s: %s", 20307, NETWORK_DNS2_ADDRESS);
-    SetControlLabel(i++, "%s %s", 13295, SYSTEM_INTERNET_STATE);
   }
 
   else if (m_section == CONTROL_BT_VIDEO)
-- 
2.7.3


From 6170212c25c88046de270445a3250e8e1dbc99c7 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Mon, 2 Mar 2015 23:50:40 +0200
Subject: [PATCH 03/24] [tb] make binary addons executable

add executable mode to all files in addon's bin folder

credits to vpeter4 for the patch
---
 xbmc/addons/Addon.cpp | 26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)

diff --git a/xbmc/addons/Addon.cpp b/xbmc/addons/Addon.cpp
index 889935c..deb21b2 100644
--- a/xbmc/addons/Addon.cpp
+++ b/xbmc/addons/Addon.cpp
@@ -50,6 +50,10 @@
 #include "freebsd/FreeBSDGNUReplacements.h"
 #endif
 
+#include <iostream>
+#include <dirent.h>
+#include <sys/stat.h>
+
 using XFILE::CDirectory;
 using XFILE::CFile;
 
@@ -399,6 +403,28 @@ void OnPostInstall(const AddonPtr& addon, bool update, bool modal)
   if (CAddonMgr::GetInstance().GetAddon(addon->ID(), localAddon, ADDON_REPOSITORY))
     CRepositoryUpdater::GetInstance().ScheduleUpdate(); //notify updater there is a new addon or version
 
+  // OE: make binary addons executable, creddits to vpeter4
+  std::string addonDirPath;
+  std::string chmodFilePath;
+  DIR *addonsDir;
+  struct dirent *fileDirent;
+  struct stat fileStat;
+  int statRet;
+
+  addonDirPath = "/storage/.kodi/addons/" + addon->ID() + "/bin/";
+  if ((addonsDir = opendir(addonDirPath.c_str())) != NULL)
+  {
+    while ((fileDirent = readdir(addonsDir)) != NULL)
+    {
+      chmodFilePath = addonDirPath + fileDirent->d_name;
+      statRet = stat(chmodFilePath.c_str(), &fileStat);
+      if (statRet == 0 && (fileStat.st_mode & S_IFMT) != S_IFDIR)
+        chmod(chmodFilePath.c_str(), fileStat.st_mode | S_IXUSR | S_IXGRP | S_IXOTH);
+    }
+    closedir(addonsDir);
+  }
+  // OE
+
   addon->OnPostInstall(update, modal);
 }
 
-- 
2.7.3


From b821b46a7b150d03a208bbc5c6af9331ba1b82fc Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sat, 18 Apr 2015 14:59:29 +0300
Subject: [PATCH 04/24] [tb] disable minimize

---
 xbmc/Application.cpp | 1 -
 1 file changed, 1 deletion(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index a42c344..4f8adbe 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -4973,7 +4973,6 @@ bool CApplication::SwitchToFullScreen(bool force /* = false */)
 
 void CApplication::Minimize()
 {
-  g_Windowing.Minimize();
 }
 
 std::string CApplication::GetCurrentPlayer()
-- 
2.7.3


From 74016e1bed6b4b6b6b50bdd32552e95f308937aa Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Mon, 18 Aug 2014 17:46:54 +0300
Subject: [PATCH 05/24] [tb] setup timezone

on TZ country setting change, store the value in format
TIMEZONE=Xx/Yyy to /storage/.cache/timezone to be used with
tz-data.service
---
 xbmc/linux/LinuxTimezone.cpp | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/xbmc/linux/LinuxTimezone.cpp b/xbmc/linux/LinuxTimezone.cpp
index ea44d40..b780e62 100644
--- a/xbmc/linux/LinuxTimezone.cpp
+++ b/xbmc/linux/LinuxTimezone.cpp
@@ -42,6 +42,8 @@
 
 #include <algorithm>
 
+#include <fstream>
+
 CLinuxTimezone::CLinuxTimezone() : m_IsDST(0)
 {
    char* line = NULL;
@@ -159,6 +161,16 @@ void CLinuxTimezone::OnSettingChanged(const CSetting *setting)
   const std::string &settingId = setting->GetId();
   if (settingId == CSettings::SETTING_LOCALE_TIMEZONE)
   {
+    std::ofstream out("/storage/.cache/timezone");
+    if (out)
+    {
+      const std::string tz = std::string("TIMEZONE=") + ((CSettingString*)setting)->GetValue().c_str();
+      out << tz << std::endl;
+      out.flush();
+      out.close();
+      system("systemctl restart tz-data.service");
+    }
+
     SetTimezone(((CSettingString*)setting)->GetValue());
 
     CDateTime::ResetTimezoneBias();
-- 
2.7.3


From 3524b0d0c776e008a4998fb0c86511adef5daed8 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Fri, 24 Apr 2015 19:45:20 +0300
Subject: [PATCH 06/24] [tb] use a wrapper to setup systemd services

---
 xbmc/addons/Addon.cpp | 30 ++++++++++++++++++++++++++++++
 xbmc/addons/Addon.h   |  1 +
 2 files changed, 31 insertions(+)

diff --git a/xbmc/addons/Addon.cpp b/xbmc/addons/Addon.cpp
index deb21b2..82c33d0 100644
--- a/xbmc/addons/Addon.cpp
+++ b/xbmc/addons/Addon.cpp
@@ -343,6 +343,13 @@ AddonVersion CAddon::GetDependencyVersion(const std::string &dependencyID) const
   return AddonVersion("0.0.0");
 }
 
+void CallOEWrapper(const std::string& ID, bool disable)
+{
+  char cmd[255];
+  snprintf(cmd, sizeof(cmd), "/usr/lib/openelec/systemd-addon-wrapper %s %d %d", ID.c_str(), disable);
+  system(cmd);
+}
+
 void OnEnabled(const std::string& id)
 {
   // If the addon is a special, call enabled handler
@@ -351,6 +358,11 @@ void OnEnabled(const std::string& id)
       CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_ADSPDLL))
     return addon->OnEnabled();
 
+  // OE: systemctl enable & start on addon enable
+  if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_SERVICE))
+    CallOEWrapper(addon->ID(), false);
+  // OE
+
   if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_SERVICE))
     std::static_pointer_cast<CService>(addon)->Start();
 
@@ -371,6 +383,11 @@ void OnDisabled(const std::string& id)
   if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_SERVICE, false))
     std::static_pointer_cast<CService>(addon)->Stop();
 
+  // OE: systemctl stop & disable on addon disable
+  if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_SERVICE, false))
+    CallOEWrapper(addon->ID(), true);
+  // OE
+
   if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_CONTEXT_ITEM, false))
     CContextMenuManager::GetInstance().Unregister(std::static_pointer_cast<CContextMenuAddon>(addon));
 }
@@ -394,6 +411,14 @@ void OnPreInstall(const AddonPtr& addon)
 void OnPostInstall(const AddonPtr& addon, bool update, bool modal)
 {
   AddonPtr localAddon;
+  // OE: systemctl stop & disable / enable & start on addon upgrade
+  if (CAddonMgr::GetInstance().GetAddon(addon->ID(), localAddon, ADDON_SERVICE))
+  {
+    CallOEWrapper(addon->ID(), true);
+    CallOEWrapper(addon->ID(), false);
+  }
+  // OE
+
   if (CAddonMgr::GetInstance().GetAddon(addon->ID(), localAddon, ADDON_SERVICE))
     std::static_pointer_cast<CService>(localAddon)->Start();
 
@@ -431,6 +456,11 @@ void OnPostInstall(const AddonPtr& addon, bool update, bool modal)
 void OnPreUnInstall(const AddonPtr& addon)
 {
   AddonPtr localAddon;
+  // OE: systemctl stop & disable on addon ininstall
+  if (CAddonMgr::GetInstance().GetAddon(addon->ID(), localAddon, ADDON_SERVICE))
+    CallOEWrapper(addon->ID(), true);
+  // OE
+
   if (CAddonMgr::GetInstance().GetAddon(addon->ID(), localAddon, ADDON_SERVICE))
     std::static_pointer_cast<CService>(localAddon)->Stop();
 
diff --git a/xbmc/addons/Addon.h b/xbmc/addons/Addon.h
index bc5338c..1079952 100644
--- a/xbmc/addons/Addon.h
+++ b/xbmc/addons/Addon.h
@@ -150,6 +150,7 @@ public:
   const InfoMap &ExtraInfo() const { return m_props.extrainfo; }
   const ADDONDEPS &GetDeps() const { return m_props.dependencies; }
 
+  void CallOEWrapper(const std::string& ID, bool disable);
 
   /*! \brief get the required version of a dependency.
    \param dependencyID the addon ID of the dependency.
-- 
2.7.3


From 9b6a54c1a3b7bea7550a51e8434ded3a3c348426 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Mon, 15 Dec 2014 21:28:54 +0200
Subject: [PATCH 07/24] [tb] handle SIGTERM

0. CApplication::Stop cant be trusted. (deadlocks crashes and boo)

so, when shutdown/reboot is requested:

1. save an exit code (for CEC...)
2. call CPowerManager::{Reboot,PowerDown}
3. ... then systemd sends TERM and waits xx seconds before sending KILL
4. CApplication::Stop has xx seconds to save guisettings.xml and boo
5. CEC thread has xx seconds to switch off after it received OnQuit
6. addons / pvrmanager / cec / everything else.. are free to deadlock / crash now, we dont care
7. KILL
---
 xbmc/Application.cpp         | 17 ++++++++++++-----
 xbmc/Application.h           |  1 +
 xbmc/XBApplicationEx.cpp     |  1 +
 xbmc/XBApplicationEx.h       |  1 +
 xbmc/platform/posix/main.cpp | 15 +++++++++++++++
 5 files changed, 30 insertions(+), 5 deletions(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index 4f8adbe..68bb4f2 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -2431,12 +2431,12 @@ void CApplication::OnApplicationMessage(ThreadMessage* pMsg)
   switch (pMsg->dwMessage)
   {
   case TMSG_POWERDOWN:
-    Stop(EXITCODE_POWERDOWN);
+    SetExitCode(EXITCODE_POWERDOWN);
     g_powerManager.Powerdown();
     break;
 
   case TMSG_QUIT:
-    Stop(EXITCODE_QUIT);
+    SetExitCode(EXITCODE_QUIT);
     break;
   
   case TMSG_SHUTDOWN:
@@ -2457,12 +2457,13 @@ void CApplication::OnApplicationMessage(ThreadMessage* pMsg)
 
   case TMSG_RESTART:
   case TMSG_RESET:
-    Stop(EXITCODE_REBOOT);
+    SetExitCode(EXITCODE_REBOOT);
     g_powerManager.Reboot();
     break;
 
   case TMSG_RESTARTAPP:
 #if defined(TARGET_WINDOWS) || defined(TARGET_LINUX)
+    SetExitCode(EXITCODE_RESTARTAPP);
     Stop(EXITCODE_RESTARTAPP);
 #endif
     break;
@@ -2855,12 +2856,19 @@ bool CApplication::Cleanup()
   }
 }
 
+void CApplication::SetExitCode(int exitCode)
+{
+  // save it for CEC
+  m_ExitCode = exitCode;
+  m_ExitCodeSet = true;
+}
+
 void CApplication::Stop(int exitCode)
 {
   try
   {
     CVariant vExitCode(CVariant::VariantTypeObject);
-    vExitCode["exitcode"] = exitCode;
+    vExitCode["exitcode"] = m_ExitCode;
     CAnnouncementManager::GetInstance().Announce(System, "xbmc", "OnQuit", vExitCode);
 
     // Abort any active screensaver
@@ -2887,7 +2895,6 @@ void CApplication::Stop(int exitCode)
 
     m_bStop = true;
     m_AppFocused = false;
-    m_ExitCode = exitCode;
     CLog::Log(LOGNOTICE, "stop all");
 
     // cancel any jobs from the jobmanager
diff --git a/xbmc/Application.h b/xbmc/Application.h
index 5f407f2..8d68c0d 100644
--- a/xbmc/Application.h
+++ b/xbmc/Application.h
@@ -154,6 +154,7 @@ public:
   void StartPVRManager();
   void StopPVRManager();
   bool IsCurrentThread() const;
+  void SetExitCode(int exitCode);
   void Stop(int exitCode);
   void RestartApp();
   void UnloadSkin(bool forReload = false);
diff --git a/xbmc/XBApplicationEx.cpp b/xbmc/XBApplicationEx.cpp
index 048a6c1..fa99ac1 100644
--- a/xbmc/XBApplicationEx.cpp
+++ b/xbmc/XBApplicationEx.cpp
@@ -40,6 +40,7 @@ CXBApplicationEx::CXBApplicationEx()
   m_bStop = false;
   m_AppFocused = true;
   m_ExitCode = EXITCODE_QUIT;
+  m_ExitCodeSet = false;
   m_renderGUI = false;
 }
 
diff --git a/xbmc/XBApplicationEx.h b/xbmc/XBApplicationEx.h
index c46cba1..ed3f35f 100644
--- a/xbmc/XBApplicationEx.h
+++ b/xbmc/XBApplicationEx.h
@@ -40,6 +40,7 @@ public:
   // Variables for timing
   bool m_bStop;
   int  m_ExitCode;
+  bool m_ExitCodeSet;
   bool m_AppFocused;
   bool m_renderGUI;
 
diff --git a/xbmc/platform/posix/main.cpp b/xbmc/platform/posix/main.cpp
index b6b7035..9e7309b 100644
--- a/xbmc/platform/posix/main.cpp
+++ b/xbmc/platform/posix/main.cpp
@@ -41,12 +41,27 @@
 #include "input/linux/LIRC.h"
 #endif
 #include "platform/XbmcContext.h"
+#include "Application.h"
+
+void xbmc_term_handler(int signum)
+{
+  CLog::Log(LOGINFO, "Received SIGTERM...");
+  if (!g_application.m_ExitCodeSet)
+    g_application.SetExitCode(EXITCODE_RESTARTAPP);
+  g_application.Stop(EXITCODE_RESTARTAPP);
+}
 
 #ifdef __cplusplus
 extern "C"
 #endif
 int main(int argc, char* argv[])
 {
+  // SIGTERM handler
+  struct sigaction action;
+  memset(&action, 0, sizeof(struct sigaction));
+  action.sa_handler = xbmc_term_handler;
+  sigaction(SIGTERM, &action, NULL);
+
   // set up some xbmc specific relationships
   XBMC::Context context;
 
-- 
2.7.3


From ccdeba63267b3863e73d2a37c62cb9c81b56209e Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sat, 18 Apr 2015 15:45:54 +0300
Subject: [PATCH 08/24] [tb] prevent kodi switching to windowed mode

---
 xbmc/windowing/X11/WinSystemX11.h | 1 +
 1 file changed, 1 insertion(+)

diff --git a/xbmc/windowing/X11/WinSystemX11.h b/xbmc/windowing/X11/WinSystemX11.h
index 297dc88..56b7835 100644
--- a/xbmc/windowing/X11/WinSystemX11.h
+++ b/xbmc/windowing/X11/WinSystemX11.h
@@ -44,6 +44,7 @@ public:
   bool ResizeWindow(int newWidth, int newHeight, int newLeft, int newTop) override;
   bool SetFullScreen(bool fullScreen, RESOLUTION_INFO& res, bool blankOtherDisplays) override;
   void UpdateResolutions() override;
+  bool CanDoWindowed() override { return false; }
   int  GetNumScreens() override { return 1; }
   int  GetCurrentScreen() override { return m_nScreen; }
   void ShowOSMouse(bool show) override;
-- 
2.7.3


From ceae324067f60112682c3da18848a19a1758bcc5 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sun, 26 Apr 2015 15:13:15 +0300
Subject: [PATCH 09/24] [tb] udevprovider: filter out OE specific mounts

---
 xbmc/storage/linux/UDevProvider.cpp | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/xbmc/storage/linux/UDevProvider.cpp b/xbmc/storage/linux/UDevProvider.cpp
index 6fda5a5..525e6b7 100644
--- a/xbmc/storage/linux/UDevProvider.cpp
+++ b/xbmc/storage/linux/UDevProvider.cpp
@@ -152,6 +152,20 @@ void CUDevProvider::GetDisks(VECSOURCES& disks, bool removable)
       continue;
     }
 
+    // OE: filter out openelec specific mounts
+    if (strstr(mountpoint, "/flash"))
+    {
+      udev_device_unref(device);
+      continue;
+    }
+
+    if (strstr(mountpoint, "/storage"))
+    {
+      udev_device_unref(device);
+      continue;
+    }
+    // OE
+
     // look for devices on the usb bus, or mounted on */media/ (sdcards), or optical devices
     const char *bus = udev_device_get_property_value(device, "ID_BUS");
     const char *optical = udev_device_get_property_value(device, "ID_CDROM"); // matches also DVD, Blu-ray
-- 
2.7.3


From 2e6ea18fddf86202c3a0e79e3473967b45343fa9 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sun, 13 Dec 2015 12:25:29 +0200
Subject: [PATCH 10/24] [tb] our ffmpeg is doing well

---
 xbmc/Application.cpp | 7 -------
 1 file changed, 7 deletions(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index 68bb4f2..83200cc 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -523,13 +523,6 @@ bool CApplication::Create()
 #else  // !USE_STATIC_FFMPEG
   CLog::Log(LOGNOTICE, "FFmpeg version: %s", FFMPEG_VERSION);
 #endif // !USE_STATIC_FFMPEG
-  if (!strstr(FFMPEG_VERSION, FFMPEG_VER_SHA))
-  {
-    if (strstr(FFMPEG_VERSION, "kodi"))
-      CLog::Log(LOGNOTICE, "WARNING: unknown ffmpeg-kodi version detected");
-    else
-      CLog::Log(LOGNOTICE, "WARNING: unsupported ffmpeg version detected");
-  }
 #endif
   
   std::string cpuModel(g_cpuInfo.getCPUModel());
-- 
2.7.3


From 7d71408fc8a95c726377be0b3ea88fb0addffa76 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sat, 26 Sep 2015 00:32:42 +0300
Subject: [PATCH 11/24] [tb] sledgehammer. fix crash while importing channels

---
 xbmc/pvr/channels/PVRChannel.cpp | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

diff --git a/xbmc/pvr/channels/PVRChannel.cpp b/xbmc/pvr/channels/PVRChannel.cpp
index b084263..6e26067 100644
--- a/xbmc/pvr/channels/PVRChannel.cpp
+++ b/xbmc/pvr/channels/PVRChannel.cpp
@@ -220,10 +220,7 @@ bool CPVRChannel::Persist()
 
   if (CPVRDatabase *database = GetPVRDatabase())
   {
-    bool bReturn = database->Persist(*this) && database->CommitInsertQueries();
-    CSingleLock lock(m_critSection);
-    m_bChanged = !bReturn;
-    return bReturn;
+    // meh
   }
 
   return false;
-- 
2.7.3


From ed85a977d06bc3c2e1ee99d3432462fe541f566e Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Tue, 15 Mar 2016 21:29:43 +0200
Subject: [PATCH 12/24] [tb] add advancedsetting to configure number of volume
 control steps

---
 xbmc/Application.cpp               | 2 +-
 xbmc/Application.h                 | 1 -
 xbmc/settings/AdvancedSettings.cpp | 2 ++
 xbmc/settings/AdvancedSettings.h   | 1 +
 4 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index 83200cc..1cc0d49 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -2378,7 +2378,7 @@ bool CApplication::OnAction(const CAction &action)
 #if defined(TARGET_ANDROID)
       float step = (VOLUME_MAXIMUM - VOLUME_MINIMUM) / CXBMCApp::GetMaxSystemVolume();
 #else
-      float step   = (VOLUME_MAXIMUM - VOLUME_MINIMUM) / VOLUME_CONTROL_STEPS;
+      float step   = (VOLUME_MAXIMUM - VOLUME_MINIMUM) / g_advancedSettings.m_volumeSteps;
 
       if (action.GetRepeat())
         step *= action.GetRepeat() * 50; // 50 fps
diff --git a/xbmc/Application.h b/xbmc/Application.h
index 8d68c0d..588ea9a 100644
--- a/xbmc/Application.h
+++ b/xbmc/Application.h
@@ -93,7 +93,6 @@ namespace MUSIC_INFO
 #define VOLUME_MINIMUM 0.0f        // -60dB
 #define VOLUME_MAXIMUM 1.0f        // 0dB
 #define VOLUME_DYNAMIC_RANGE 90.0f // 60dB
-#define VOLUME_CONTROL_STEPS 90    // 90 steps
 
 // replay gain settings struct for quick access by the player multiple
 // times per second (saves doing settings lookup)
diff --git a/xbmc/settings/AdvancedSettings.cpp b/xbmc/settings/AdvancedSettings.cpp
index 2adc1f5..574cfb1 100644
--- a/xbmc/settings/AdvancedSettings.cpp
+++ b/xbmc/settings/AdvancedSettings.cpp
@@ -117,6 +117,7 @@ void CAdvancedSettings::Initialize()
   //default hold time of 25 ms, this allows a 20 hertz sine to pass undistorted
   m_limiterHold = 0.025f;
   m_limiterRelease = 0.1f;
+  m_volumeSteps = 90;
 
   m_seekSteps = { 10, 30, 60, 180, 300, 600, 1800 };
 
@@ -489,6 +490,7 @@ void CAdvancedSettings::ParseSettingsFile(const std::string &file)
 
     XMLUtils::GetFloat(pElement, "limiterhold", m_limiterHold, 0.0f, 100.0f);
     XMLUtils::GetFloat(pElement, "limiterrelease", m_limiterRelease, 0.001f, 100.0f);
+    XMLUtils::GetInt(pElement, "volumesteps", m_volumeSteps, 10, 90);
   }
 
   pElement = pRootElement->FirstChildElement("omx");
diff --git a/xbmc/settings/AdvancedSettings.h b/xbmc/settings/AdvancedSettings.h
index ae05f9b..6db5f12 100644
--- a/xbmc/settings/AdvancedSettings.h
+++ b/xbmc/settings/AdvancedSettings.h
@@ -136,6 +136,7 @@ class CAdvancedSettings : public ISettingCallback, public ISettingsHandler
     bool m_VideoPlayerIgnoreDTSinWAV;
     float m_limiterHold;
     float m_limiterRelease;
+    int m_volumeSteps;
 
     bool  m_omxDecodeStartWithValidFrame;
 
-- 
2.7.3


From 25fde749d3814010b52e9eea00a8cf1bcc54635c Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Tue, 25 Aug 2015 10:55:11 +0300
Subject: [PATCH 13/24] [tb] meh addon sonames

---
 project/cmake/scripts/common/addon-helpers.cmake | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/project/cmake/scripts/common/addon-helpers.cmake b/project/cmake/scripts/common/addon-helpers.cmake
index 9541df4..9e2e398 100644
--- a/project/cmake/scripts/common/addon-helpers.cmake
+++ b/project/cmake/scripts/common/addon-helpers.cmake
@@ -54,6 +54,9 @@ macro (build_addon target prefix libs)
     SET(LIBRARY_FILENAME $<TARGET_FILE_NAME:${target}>)
   endif()
 
+  # meh
+  set(LIBRARY_FILENAME $<TARGET_LINKER_FILE_NAME:${target}>)
+
   # if there's an addon.xml.in we need to generate the addon.xml
   IF(EXISTS ${PROJECT_SOURCE_DIR}/${target}/addon.xml.in)
     SET(PLATFORM ${CORE_SYSTEM_NAME})
-- 
2.7.3


From e488e8d1555943bd723e30a13ac4e9a82b206905 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sun, 27 Dec 2015 14:47:11 +0200
Subject: [PATCH 14/24] [tb] meh past epg data

---
 xbmc/pvr/windows/GUIWindowPVRGuide.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/xbmc/pvr/windows/GUIWindowPVRGuide.cpp b/xbmc/pvr/windows/GUIWindowPVRGuide.cpp
index 57a5179..634c664 100644
--- a/xbmc/pvr/windows/GUIWindowPVRGuide.cpp
+++ b/xbmc/pvr/windows/GUIWindowPVRGuide.cpp
@@ -485,7 +485,7 @@ void CGUIWindowPVRGuide::GetViewTimelineItems(CFileItemList &items)
     endDate = startDate;
 
   // limit start to linger time
-  CDateTime maxPastDate = currentDate - CDateTimeSpan(0, 0, g_advancedSettings.m_iEpgLingerTime, 0);
+  CDateTime maxPastDate = currentDate - CDateTimeSpan(0, 0, 60, 0);
   if (startDate < maxPastDate)
     startDate = maxPastDate;
 
-- 
2.7.3


From eeb92e8f8a829110bb7741a7c6c1dffd7f80c9be Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Tue, 10 Nov 2015 14:27:27 +0200
Subject: [PATCH 15/24] [tb] bye dcadec

---
 Makefile.in  | 2 +-
 configure.ac | 1 -
 2 files changed, 1 insertion(+), 2 deletions(-)

diff --git a/Makefile.in b/Makefile.in
index 4b805e0..238f2e4 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -389,7 +389,7 @@ FFMPEGOBJS = @FFMPEG_LIBDIR@/libavcodec.a \
              @FFMPEG_LIBDIR@/libpostproc.a \
              @FFMPEG_LIBDIR@/libswscale.a
 DYNOBJSXBMC+= $(FFMPEGOBJS)
-LIBS+= @GNUTLS_ALL_LIBS@ @VORBISENC_ALL_LIBS@ @DCADEC_ALL_LIBS@
+LIBS+= @GNUTLS_ALL_LIBS@ @VORBISENC_ALL_LIBS@
 
 $(FFMPEGOBJS): dvdpcodecs
 endif
diff --git a/configure.ac b/configure.ac
index 174c2d3..db195e4 100644
--- a/configure.ac
+++ b/configure.ac
@@ -965,7 +965,6 @@ fi
 AC_CHECK_HEADER([ass/ass.h],, AC_MSG_ERROR($missing_library))
 AC_CHECK_HEADER([ogg/ogg.h],,        AC_MSG_ERROR($missing_library))
 AC_CHECK_HEADER([vorbis/vorbisfile.h],, AC_MSG_ERROR($missing_library))
-PKG_CHECK_MODULES([LIBDCADEC], [dcadec],, AC_MSG_ERROR([libdcadec not found]))
 
 PKG_CHECK_MODULES([LIBCURL], [libcurl],, AC_MSG_ERROR([libcurl not found]))
 XB_FIND_SONAME([CURL], [curl])
-- 
2.7.3


From 365df6c70296ec7e75a7dc926acc930bddc14b0e Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Wed, 24 Feb 2016 18:27:13 +0200
Subject: [PATCH 16/24] [tb] bye libdvd

---
 Makefile.in | 2 --
 1 file changed, 2 deletions(-)

diff --git a/Makefile.in b/Makefile.in
index 238f2e4..953a230 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -11,7 +11,6 @@ EC_DIRS= \
 
 DVDPCODECS_DIRS= \
 	lib \
-	lib/libdvd
 
 VideoPlayer_ARCHIVES=xbmc/cores/VideoPlayer/VideoPlayer.a \
                    xbmc/cores/VideoPlayer/DVDCodecs/DVDCodecs.a \
@@ -339,7 +338,6 @@ libaddon: exports
 	$(MAKE) -C lib/addons/library.xbmc.pvr
 	$(MAKE) -C lib/addons/library.kodi.inputstream
 dvdpcodecs: dllloader
-	$(MAKE) -C lib/libdvd
 
 dvdpextcodecs:
 
-- 
2.7.3


From f7b6878d683e182caaa08178ac492ed9177bf3c0 Mon Sep 17 00:00:00 2001
From: Alex Deryskyba <alex@codesnake.com>
Date: Sat, 20 Sep 2014 04:43:52 +0300
Subject: [PATCH 17/24] [aml] Fill audio packets completely when resampling to
 prevent 'audio data unaligned' kernel warnings

---
 xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.cpp | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.cpp b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.cpp
index 7460457..4e09342 100644
--- a/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.cpp
+++ b/xbmc/cores/AudioEngine/Engines/ActiveAE/ActiveAEBuffer.cpp
@@ -159,7 +159,11 @@ CActiveAEBufferPoolResample::CActiveAEBufferPoolResample(AEAudioFormat inputForm
     m_inputFormat.m_channelLayout += AE_CH_FC;
   }
   m_resampler = NULL;
+#ifdef HAS_LIBAMCODEC
+  m_fillPackets = true;
+#else
   m_fillPackets = false;
+#endif
   m_drain = false;
   m_empty = true;
   m_procSample = NULL;
-- 
2.7.3


From 99644972712426dfaebe5e422d619d29a67c8b51 Mon Sep 17 00:00:00 2001
From: Alex Deryskyba <alex@codesnake.com>
Date: Tue, 30 Jun 2015 11:19:57 +0200
Subject: [PATCH 18/24] [aml] Ugly workaround to show DTS/AC3 caps

... but don't run into multi channel issues as we can only open 2 pcm channels
---
 xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp b/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp
index fbccce0..bc2a506 100644
--- a/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp
+++ b/xbmc/cores/AudioEngine/Sinks/AESinkALSA.cpp
@@ -1297,6 +1297,12 @@ void CAESinkALSA::EnumerateDevicesEx(AEDeviceInfoList &list, bool force)
 
 AEDeviceType CAESinkALSA::AEDeviceTypeFromName(const std::string &name)
 {
+#ifdef HAS_LIBAMCODEC
+  // ugly workaround to show DTS / AC3 caps
+  // but don't run into multi channel issues
+  // as we can only open 2 pcm channels
+  return AE_DEVTYPE_IEC958;
+#endif
   if (name.substr(0, 4) == "hdmi")
     return AE_DEVTYPE_HDMI;
   else if (name.substr(0, 6) == "iec958" || name.substr(0, 5) == "spdif")
-- 
2.7.3


From 820862aa01a8cc525aa4434d64f7c46b1c264c78 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sat, 7 Nov 2015 16:24:58 +0200
Subject: [PATCH 19/24] [aml] fix compiler badness when compiling with amcodec

---
 xbmc/cores/VideoPlayer/DVDCodecs/Video/Makefile.in | 2 --
 1 file changed, 2 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/Makefile.in b/xbmc/cores/VideoPlayer/DVDCodecs/Video/Makefile.in
index a1a3447..1bf5a89 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/Makefile.in
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/Makefile.in
@@ -24,8 +24,6 @@ endif
 ifeq (@USE_LIBAMCODEC@,1)
 SRCS += AMLCodec.cpp
 SRCS += DVDVideoCodecAmlogic.cpp
-INCLUDES += -I$(prefix)/include/amcodec
-INCLUDES += -I$(prefix)/include/amplayer
 endif
 
 ifeq (@USE_ANDROID@,1)
-- 
2.7.3


From 4b352167966bf8a7a8e9b01bb16ac2267262ce33 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sat, 7 Nov 2015 16:25:44 +0200
Subject: [PATCH 20/24] [aml] perform suspend instead of powerdown

---
 system/keymaps/keyboard.xml                        | 2 +-
 xbmc/powermanagement/linux/LogindUPowerSyscall.cpp | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/system/keymaps/keyboard.xml b/system/keymaps/keyboard.xml
index 9833cff..0ce105e 100644
--- a/system/keymaps/keyboard.xml
+++ b/system/keymaps/keyboard.xml
@@ -91,7 +91,7 @@
       <backslash>ToggleFullScreen</backslash>
       <home>FirstPage</home>
       <end>LastPage</end>
-      <power>ActivateWindow(shutdownmenu)</power>
+      <power>XBMC.Powerdown()</power>
       <sleep>ActivateWindow(shutdownmenu)</sleep>
       <!-- PVR windows -->
       <e>ActivateWindow(TVGuide)</e>
diff --git a/xbmc/powermanagement/linux/LogindUPowerSyscall.cpp b/xbmc/powermanagement/linux/LogindUPowerSyscall.cpp
index 4e5bcc6..ad5847d 100644
--- a/xbmc/powermanagement/linux/LogindUPowerSyscall.cpp
+++ b/xbmc/powermanagement/linux/LogindUPowerSyscall.cpp
@@ -53,7 +53,7 @@ CLogindUPowerSyscall::CLogindUPowerSyscall()
   m_canPowerdown = LogindCheckCapability("CanPowerOff");
   m_canReboot    = LogindCheckCapability("CanReboot");
   m_canHibernate = LogindCheckCapability("CanHibernate");
-  m_canSuspend   = LogindCheckCapability("CanSuspend");
+  m_canSuspend   = false;
 
   InhibitDelayLock();
 
@@ -98,7 +98,7 @@ CLogindUPowerSyscall::~CLogindUPowerSyscall()
 
 bool CLogindUPowerSyscall::Powerdown()
 {
-  return LogindSetPowerState("PowerOff");
+  return Suspend();
 }
 
 bool CLogindUPowerSyscall::Reboot()
-- 
2.7.3


From b24df9c7cd83e138b7532fdf8524dc8fca4f8158 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Mon, 1 Feb 2016 21:19:58 +0200
Subject: [PATCH 21/24] [aml] prefer libamcodec.so

---
 xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
index 0a97893..1fface4 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
@@ -101,7 +101,7 @@ public:
 class DllLibAmCodec : public DllDynamic, DllLibamCodecInterface
 {
   // libamcodec is static linked into libamplayer.so or libamcodec.so
-  DECLARE_DLL_WRAPPER(DllLibAmCodec, "libamplayer.so")
+  DECLARE_DLL_WRAPPER(DllLibAmCodec, "libamcodec.so")
 
   DEFINE_METHOD1(int, codec_init,               (codec_para_t *p1))
   DEFINE_METHOD1(int, codec_close,              (codec_para_t *p1))
@@ -1389,8 +1389,8 @@ CAMLCodec::CAMLCodec()
   m_dll = new DllLibAmCodec;
   if(!m_dll->Load())
   {
-    CLog::Log(LOGWARNING, "CAMLCodec::CAMLCodec libamplayer.so not found, trying libamcodec.so instead");
-    m_dll->SetFile("libamcodec.so");
+    CLog::Log(LOGWARNING, "CAMLCodec::CAMLCodec libamcodec.so not found, trying libamplayer.so instead");
+    m_dll->SetFile("libamplayer.so");
     m_dll->Load();
   }
   am_private->m_dll = m_dll;
-- 
2.7.3


From 01b2d3d9daa9c1badc755170e8940fde1b01d7e1 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Wed, 16 Mar 2016 22:43:07 +0200
Subject: [PATCH 22/24] [aml] re-add IVPClockCallback

nobody cared. is amcodec dead?
---
 .../VideoPlayer/DVDCodecs/DVDFactoryCodec.cpp      |  4 +-
 xbmc/cores/VideoPlayer/DVDCodecs/DVDFactoryCodec.h |  3 +-
 .../cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp | 61 +++++++++++++++++++---
 xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h  |  7 ++-
 .../DVDCodecs/Video/DVDVideoCodecAmlogic.cpp       |  5 +-
 .../DVDCodecs/Video/DVDVideoCodecAmlogic.h         |  5 +-
 .../VideoPlayer/Interfaces/IVPClockCallback.h      | 27 ++++++++++
 xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp        | 10 +++-
 xbmc/cores/VideoPlayer/VideoPlayerVideo.h          |  6 ++-
 9 files changed, 112 insertions(+), 16 deletions(-)
 create mode 100644 xbmc/cores/VideoPlayer/Interfaces/IVPClockCallback.h

diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/DVDFactoryCodec.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/DVDFactoryCodec.cpp
index 355257c..45947d9 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/DVDFactoryCodec.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/DVDFactoryCodec.cpp
@@ -126,7 +126,7 @@ CDVDOverlayCodec* CDVDFactoryCodec::OpenCodec(CDVDOverlayCodec* pCodec, CDVDStre
 }
 
 
-CDVDVideoCodec* CDVDFactoryCodec::CreateVideoCodec(CDVDStreamInfo &hint, CProcessInfo &processInfo, const CRenderInfo &info)
+CDVDVideoCodec* CDVDFactoryCodec::CreateVideoCodec(CDVDStreamInfo &hint, CProcessInfo &processInfo, const CRenderInfo &info, IVPClockCallback* clock)
 {
   CDVDVideoCodec* pCodec = nullptr;
   CDVDCodecOptions options;
@@ -143,7 +143,7 @@ CDVDVideoCodec* CDVDFactoryCodec::CreateVideoCodec(CDVDStreamInfo &hint, CProces
 #if defined(HAS_LIBAMCODEC)
     // Amlogic can be present on multiple platforms (Linux, Android)
     // try this first. if it does not open, we still try other hw decoders
-    pCodec = OpenCodec(new CDVDVideoCodecAmlogic(processInfo), hint, options);
+    pCodec = OpenCodec(new CDVDVideoCodecAmlogic(processInfo, clock), hint, options);
     if (pCodec)
       return pCodec;
 #endif
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/DVDFactoryCodec.h b/xbmc/cores/VideoPlayer/DVDCodecs/DVDFactoryCodec.h
index 45e794b..06a5c0b 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/DVDFactoryCodec.h
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/DVDFactoryCodec.h
@@ -34,13 +34,14 @@ class CDVDStreamInfo;
 class CDVDCodecOption;
 class CDVDCodecOptions;
 
+class IVPClockCallback;
 
 class CDVDFactoryCodec
 {
 public:
   static CDVDVideoCodec* CreateVideoCodec(CDVDStreamInfo &hint,
                                           CProcessInfo &processInfo,
-                                          const CRenderInfo &info = CRenderInfo());
+                                          const CRenderInfo &info = CRenderInfo(), IVPClockCallback* clock = NULL);
   static CDVDAudioCodec* CreateAudioCodec(CDVDStreamInfo &hint, bool allowpassthrough = true, bool allowdtshddecode = true);
   static CDVDOverlayCodec* CreateOverlayCodec(CDVDStreamInfo &hint );
 
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
index 1fface4..a3cb24c 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
@@ -26,6 +26,7 @@
 #include "cores/VideoPlayer/DVDClock.h"
 #include "cores/VideoPlayer/VideoRenderers/RenderFlags.h"
 #include "cores/VideoPlayer/VideoRenderers/RenderManager.h"
+#include "cores/VideoPlayer/Interfaces/IVPClockCallback.h"
 #include "guilib/GraphicContext.h"
 #include "settings/DisplaySettings.h"
 #include "settings/MediaSettings.h"
@@ -1380,8 +1381,9 @@ int set_header_info(am_private_t *para)
 }
 
 /*************************************************************************/
-CAMLCodec::CAMLCodec()
+CAMLCodec::CAMLCodec(IVPClockCallback* clock)
   : CThread("CAMLCodec")
+  , m_clock(clock)
 {
   m_opened = false;
   am_private = new am_private_t;
@@ -1418,7 +1420,6 @@ bool CAMLCodec::OpenDecoder(CDVDStreamInfo &hints)
   m_speed = DVD_PLAYSPEED_NORMAL;
   m_1st_pts = 0;
   m_cur_pts = 0;
-  m_player_pts = 0;
   m_cur_pictcnt = 0;
   m_old_pictcnt = 0;
   m_dst_rect.SetRect(0, 0, 0, 0);
@@ -1728,7 +1729,6 @@ int CAMLCodec::Decode(uint8_t *pData, size_t iSize, double dts, double pts)
 
   if (pData)
   {
-    m_player_pts = pts;
     am_private->am_pkt.data = pData;
     am_private->am_pkt.data_size = iSize;
 
@@ -1817,12 +1817,10 @@ int CAMLCodec::Decode(uint8_t *pData, size_t iSize, double dts, double pts)
   // we must return VC_BUFFER or VC_PICTURE,
   // default to VC_BUFFER.
   int rtn = VC_BUFFER;
-  m_player_pts = DVD_NOPTS_VALUE;
   if (m_old_pictcnt != m_cur_pictcnt)
   {
     m_old_pictcnt++;
     rtn = VC_PICTURE;
-    m_player_pts = pts;
     // we got a new pict, try and keep hw buffered demux above 2 seconds.
     // this, combined with the above 1 second check, keeps hw buffered demux between 1 and 2 seconds.
     // we also check to make sure we keep from filling hw buffer.
@@ -1848,7 +1846,12 @@ bool CAMLCodec::GetPicture(DVDVideoPicture *pDvdVideoPicture)
 
   pDvdVideoPicture->dts = DVD_NOPTS_VALUE;
   if (m_speed == DVD_PLAYSPEED_NORMAL)
-    pDvdVideoPicture->pts = m_player_pts;
+  {
+    pDvdVideoPicture->pts = GetPlayerPtsSeconds() * (double)DVD_TIME_BASE;
+    // video pts cannot be late or VideoPlayer goes nuts,
+    // so run it one frame ahead
+    pDvdVideoPicture->pts += 1 * pDvdVideoPicture->iDuration;
+  }
   else
   {
     if (m_cur_pts == 0)
@@ -1957,6 +1960,38 @@ void CAMLCodec::Process()
         m_cur_pts = pts_video;
         m_cur_pictcnt++;
         m_ready_event.Set();
+        // correct video pts by starting pts.
+        if (m_start_pts != 0)
+          pts_video += m_start_pts;
+        else if (m_start_dts != 0)
+          pts_video += m_start_dts;
+
+        double app_pts = GetPlayerPtsSeconds();
+        // add in audio delay/display latency contribution
+        // FIXME: Replace Video latency?
+        double offset  = 0 - CMediaSettings::GetInstance().GetCurrentVideoSettings().m_AudioDelay;
+        // correct video pts by user set delay and rendering delay
+        app_pts += offset;
+
+        //CLog::Log(LOGDEBUG, "CAMLCodec::Process: app_pts(%f), pts_video/PTS_FREQ(%f)",
+        //  app_pts, (double)pts_video/PTS_FREQ);
+
+        double error = app_pts - (double)pts_video/PTS_FREQ;
+        double abs_error = fabs(error);
+        if (abs_error > 0)
+        {
+          //CLog::Log(LOGDEBUG, "CAMLCodec::Process pts diff = %f", error);
+          if (abs_error > 0.150)
+          {
+            // big error so try to reset pts_pcrscr
+            SetVideoPtsSeconds(app_pts);
+          }
+          else
+          {
+            // small error so try to avoid a frame jump
+            SetVideoPtsSeconds((double)pts_video/PTS_FREQ + error/4);
+          }
+        }
       }
     }
     else
@@ -1968,6 +2003,20 @@ void CAMLCodec::Process()
   CLog::Log(LOGDEBUG, "CAMLCodec::Process Stopped");
 }
 
+double CAMLCodec::GetPlayerPtsSeconds()
+{
+  double clock_pts = 0.0;
+  if (m_clock)
+    clock_pts = m_clock->GetInterpolatedClock() / DVD_TIME_BASE;
+  else
+  {
+    CLog::Log(LOGWARNING, "CAMLCodec::GetPlayerPtsSeconds: cannot get player clock");
+    clock_pts = CDVDClock::GetAbsoluteClock() / DVD_TIME_BASE;
+  }
+
+  return clock_pts;
+}
+
 void CAMLCodec::SetVideoPtsSeconds(const double pts)
 {
   //CLog::Log(LOGDEBUG, "CAMLCodec::SetVideoPtsSeconds: pts(%f)", pts);
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h
index 5b9ee4f..7ae18e7 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h
@@ -30,10 +30,12 @@ typedef struct am_private_t am_private_t;
 
 class DllLibAmCodec;
 
+class IVPClockCallback;
+
 class CAMLCodec : public CThread
 {
 public:
-  CAMLCodec();
+  CAMLCodec(IVPClockCallback* clock);
   virtual ~CAMLCodec();
 
   bool          OpenDecoder(CDVDStreamInfo &hints);
@@ -52,6 +54,7 @@ protected:
   virtual void  Process();
 
 private:
+  double        GetPlayerPtsSeconds();
   void          SetVideoPtsSeconds(double pts);
   void          ShowMainVideo(const bool show);
   void          SetVideoZoom(const float zoom);
@@ -86,5 +89,5 @@ private:
   int              m_contrast;
   int              m_brightness;
 
-  double m_player_pts;
+  IVPClockCallback* m_clock;
 };
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
index 7525947..9c4c81f 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
@@ -39,7 +39,8 @@ typedef struct frame_queue {
   struct frame_queue *nextframe;
 } frame_queue;
 
-CDVDVideoCodecAmlogic::CDVDVideoCodecAmlogic(CProcessInfo &processInfo) : CDVDVideoCodec(processInfo),
+CDVDVideoCodecAmlogic::CDVDVideoCodecAmlogic(CProcessInfo &processInfo, IVPClockCallback* clock) : CDVDVideoCodec(processInfo),
+  m_clock(clock),
   m_Codec(NULL),
   m_pFormatName("amcodec"),
   m_last_pts(0.0),
@@ -180,7 +181,7 @@ bool CDVDVideoCodecAmlogic::Open(CDVDStreamInfo &hints, CDVDCodecOptions &option
   }
 
   m_aspect_ratio = m_hints.aspect;
-  m_Codec = new CAMLCodec();
+  m_Codec = new CAMLCodec(m_clock);
   if (!m_Codec)
   {
     CLog::Log(LOGERROR, "%s: Failed to create Amlogic Codec", __MODULE_NAME__);
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.h b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.h
index b352641..155ff98 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.h
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.h
@@ -33,6 +33,8 @@ class CBitstreamConverter;
 
 class CDVDVideoCodecAmlogic;
 
+class IVPClockCallback;
+
 class CDVDAmlogicInfo
 {
 public:
@@ -58,7 +60,7 @@ class CDVDVideoCodecAmlogic : public CDVDVideoCodec
   friend class CDVDAmlogicInfo;
 
 public:
-  CDVDVideoCodecAmlogic(CProcessInfo &processInfo);
+  CDVDVideoCodecAmlogic(CProcessInfo &processInfo, IVPClockCallback* clock);
   virtual ~CDVDVideoCodecAmlogic();
 
   // Required overrides
@@ -80,6 +82,7 @@ protected:
   void            FrameRateTracking(uint8_t *pData, int iSize, double dts, double pts);
   void            RemoveInfo(CDVDAmlogicInfo* info);
 
+  IVPClockCallback* m_clock;
   CAMLCodec      *m_Codec;
   std::set<CDVDAmlogicInfo*> m_inflight;
   const char     *m_pFormatName;
diff --git a/xbmc/cores/VideoPlayer/Interfaces/IVPClockCallback.h b/xbmc/cores/VideoPlayer/Interfaces/IVPClockCallback.h
new file mode 100644
index 0000000..1a5b11e
--- /dev/null
+++ b/xbmc/cores/VideoPlayer/Interfaces/IVPClockCallback.h
@@ -0,0 +1,27 @@
+#pragma once
+
+/*
+ *      Copyright (C) 2015 Team Kodi
+ *      http://xbmc.org
+ *
+ *  This Program is free software; you can redistribute it and/or modify
+ *  it under the terms of the GNU General Public License as published by
+ *  the Free Software Foundation; either version 2, or (at your option)
+ *  any later version.
+ *
+ *  This Program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ *  GNU General Public License for more details.
+ *
+ *  You should have received a copy of the GNU General Public License
+ *  along with XBMC; see the file COPYING.  If not, see
+ *  <http://www.gnu.org/licenses/>.
+ *
+ */
+
+class IVPClockCallback
+{
+public:
+  virtual double GetInterpolatedClock() = 0;
+};
diff --git a/xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp b/xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp
index bd3fe73..657e5db 100644
--- a/xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp
+++ b/xbmc/cores/VideoPlayer/VideoPlayerVideo.cpp
@@ -131,7 +131,7 @@ bool CVideoPlayerVideo::OpenStream( CDVDStreamInfo &hint )
     return false;
 
   CLog::Log(LOGNOTICE, "Creating video codec with codec id: %i", hint.codec);
-  CDVDVideoCodec* codec = CDVDFactoryCodec::CreateVideoCodec(hint, m_processInfo, info);
+  CDVDVideoCodec* codec = CDVDFactoryCodec::CreateVideoCodec(hint, m_processInfo, info, this);
   if(!codec)
   {
     CLog::Log(LOGERROR, "Unsupported video codec");
@@ -1174,6 +1174,14 @@ int CVideoPlayerVideo::CalcDropRequirement(double pts)
   return result;
 }
 
+double CVideoPlayerVideo::GetInterpolatedClock()
+{
+  if(m_pClock)
+    return m_pClock->GetClock(true);
+  else
+    return 0.0;
+}
+
 void CDroppingStats::Reset()
 {
   m_gain.clear();
diff --git a/xbmc/cores/VideoPlayer/VideoPlayerVideo.h b/xbmc/cores/VideoPlayer/VideoPlayerVideo.h
index 5149066..32b80e0 100644
--- a/xbmc/cores/VideoPlayer/VideoPlayerVideo.h
+++ b/xbmc/cores/VideoPlayer/VideoPlayerVideo.h
@@ -22,6 +22,7 @@
 
 #include "threads/Thread.h"
 #include "IVideoPlayer.h"
+#include "Interfaces/IVPClockCallback.h"
 #include "DVDMessageQueue.h"
 #include "DVDCodecs/Video/DVDVideoCodec.h"
 #include "DVDClock.h"
@@ -57,7 +58,7 @@ public:
   unsigned int m_dropRequests;
 };
 
-class CVideoPlayerVideo : public CThread, public IDVDStreamPlayerVideo
+class CVideoPlayerVideo : public CThread, public IDVDStreamPlayerVideo, public IVPClockCallback
 {
 public:
   CVideoPlayerVideo(CDVDClock* pClock
@@ -96,6 +97,9 @@ public:
   std::string GetStereoMode();
   void SetSpeed(int iSpeed);
 
+  // IVPClockCallback interface
+  virtual double GetInterpolatedClock();
+
   // classes
   CDVDOverlayContainer* m_pOverlayContainer;
   CDVDClock* m_pClock;
-- 
2.7.3


From d4617f1434803770fec812f0f7a383bdab859cc1 Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Wed, 16 Mar 2016 23:47:54 +0200
Subject: [PATCH 23/24] [aml] pvr can reopen too fast, slow us down a little

---
 xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
index a3cb24c..e6327b4 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
@@ -1680,6 +1680,10 @@ void CAMLCodec::CloseDecoder()
   SysfsUtils::SetInt("/sys/class/tsync/enable", 1);
 
   ShowMainVideo(false);
+
+  // add a little delay after closing in case
+  // we are reopened too fast.
+  usleep(500 * 1000);
 }
 
 void CAMLCodec::Reset()
-- 
2.7.3


From 08bab129b7defafc22a16ea70159fc16f3d6c66f Mon Sep 17 00:00:00 2001
From: Stefan Saraev <stefan@saraev.ca>
Date: Sun, 17 Jan 2016 15:15:47 +0200
Subject: [PATCH 24/24] [aml] TEMP: use software decoding for sd

---
 xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
index 9c4c81f..54322d9 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
@@ -82,8 +82,6 @@ bool CDVDVideoCodecAmlogic::Open(CDVDStreamInfo &hints, CDVDCodecOptions &option
     case AV_CODEC_ID_MJPEG:
       m_pFormatName = "am-mjpeg";
       break;
-    case AV_CODEC_ID_MPEG1VIDEO:
-    case AV_CODEC_ID_MPEG2VIDEO:
     case AV_CODEC_ID_MPEG2VIDEO_XVMC:
       m_mpeg2_sequence_pts = 0;
       m_mpeg2_sequence = new mpeg2_sequence;
@@ -123,6 +121,8 @@ bool CDVDVideoCodecAmlogic::Open(CDVDStreamInfo &hints, CDVDCodecOptions &option
     case AV_CODEC_ID_MPEG4:
     case AV_CODEC_ID_MSMPEG4V2:
     case AV_CODEC_ID_MSMPEG4V3:
+    case AV_CODEC_ID_MPEG1VIDEO:
+    case AV_CODEC_ID_MPEG2VIDEO:
       if (hints.width <= 800)
         return false;
       m_pFormatName = "am-mpeg4";
-- 
2.7.3

